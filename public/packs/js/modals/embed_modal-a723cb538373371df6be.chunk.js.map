{"version":3,"sources":["webpack:///./app/javascript/mastodon/features/ui/components/embed_modal.jsx"],"names":["messages","defineMessages","close","id","defaultMessage","EmbedModal","ImmutablePureComponent","constructor","arguments","state","loading","oembed","setIframeRef","c","this","iframe","handleTextareaClick","e","target","select","componentDidMount","props","setState","api","get","then","res","data","iframeDocument","contentWindow","document","open","write","html","body","style","margin","width","scrollWidth","height","scrollHeight","catch","error","onError","render","intl","onClose","_jsx","className","IconButton","title","formatMessage","icon","onClick","size","FormattedMessage","display","type","readOnly","value","_jsx2","frameBorder","ref","sandbox","propTypes","PropTypes","string","isRequired","func","object","injectIntl"],"mappings":"oLASA,MAAMA,EAAWC,YAAe,CAC9BC,MAAO,CAAEC,GAAG,iBAAmBC,eAAe,WAGhD,MAAMC,UAAmBC,IAAuBC,cAAA,SAAAC,WAAA,KAS9CC,MAAQ,CACNC,SAAS,EACTC,OAAQ,MACR,KAwBFC,aAAeC,IACbC,KAAKC,OAASF,CAAC,EACf,KAEFG,oBAAuBC,IACrBA,EAAEC,OAAOC,QAAQ,CACjB,CA5BFC,oBACE,MAAM,GAAEjB,GAAOW,KAAKO,MAEpBP,KAAKQ,SAAS,CAAEZ,SAAS,IAEzBa,cAAMC,IAAK,mBAAkBrB,KAAMsB,MAAKC,IACtCZ,KAAKQ,SAAS,CAAEZ,SAAS,EAAOC,OAAQe,EAAIC,OAE5C,MAAMC,EAAiBd,KAAKC,OAAOc,cAAcC,SAEjDF,EAAeG,OACfH,EAAeI,MAAMN,EAAIC,KAAKM,MAC9BL,EAAe1B,QAEf0B,EAAeM,KAAKC,MAAMC,OAAS,EACnCtB,KAAKC,OAAOsB,MAAST,EAAeM,KAAKI,YACzCxB,KAAKC,OAAOwB,OAASX,EAAeM,KAAKM,YAAY,IACpDC,OAAMC,IACP5B,KAAKO,MAAMsB,QAAQD,EAAM,GAE7B,CAUAE,SACE,MAAM,KAAEC,EAAI,QAAEC,GAAYhC,KAAKO,OACzB,OAAEV,GAAWG,KAAKL,MAExB,OACEsC,YAAA,OAAKC,UAAU,mDAA4C,EACzDD,YAAA,OAAKC,UAAU,6BAAsB,EACnCD,YAACE,IAAU,CAACD,UAAU,qBAAqBE,MAAOL,EAAKM,cAAcnD,EAASE,OAAQkD,KAAK,QAAQC,QAASP,EAASQ,KAAM,KAC3HP,YAACQ,IAAgB,CAACpD,GAAE,eAAgBC,eAAe,WAGrD2C,YAAA,OAAKC,UAAU,iDAAiDb,MAAO,CAAEqB,QAAS,eAAU,EAC1FT,YAAA,KAAGC,UAAU,aAAM,EACjBD,YAACQ,IAAgB,CAACpD,GAAE,qBAAsBC,eAAe,kEAG3D2C,YAAA,SACEU,KAAK,OACLT,UAAU,oBACVU,UAAQ,EACRC,MAAOhD,GAAUA,EAAOsB,MAAQ,GAChCoB,QAASvC,KAAKE,sBAGhB+B,YAAA,KAAGC,UAAU,aAAM,EACjBD,YAACQ,IAAgB,CAACpD,GAAE,gBAAiBC,eAAe,qCAGtDwD,cAAA,UACEZ,UAAU,sBACVa,YAAY,IACZC,IAAKhD,KAAKF,aACVmD,QAAQ,kCACRb,MAAM,aAKhB,EAlFI7C,EAEG2D,UAAY,CACjB7D,GAAI8D,IAAUC,OAAOC,WACrBrB,QAASmB,IAAUG,KAAKD,WACxBxB,QAASsB,IAAUG,KAAKD,WACxBtB,KAAMoB,IAAUI,OAAOF,YAgFZG,sBAAWjE,E","file":"js/modals/embed_modal-a723cb538373371df6be.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nimport { defineMessages, FormattedMessage, injectIntl } from 'react-intl';\n\nimport ImmutablePureComponent from 'react-immutable-pure-component';\n\nimport api from 'mastodon/api';\nimport { IconButton } from 'mastodon/components/icon_button';\n\nconst messages = defineMessages({\n  close: { id: 'lightbox.close', defaultMessage: 'Close' },\n});\n\nclass EmbedModal extends ImmutablePureComponent {\n\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onError: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  state = {\n    loading: false,\n    oembed: null,\n  };\n\n  componentDidMount () {\n    const { id } = this.props;\n\n    this.setState({ loading: true });\n\n    api().get(`/api/web/embeds/${id}`).then(res => {\n      this.setState({ loading: false, oembed: res.data });\n\n      const iframeDocument = this.iframe.contentWindow.document;\n\n      iframeDocument.open();\n      iframeDocument.write(res.data.html);\n      iframeDocument.close();\n\n      iframeDocument.body.style.margin = 0;\n      this.iframe.width  = iframeDocument.body.scrollWidth;\n      this.iframe.height = iframeDocument.body.scrollHeight;\n    }).catch(error => {\n      this.props.onError(error);\n    });\n  }\n\n  setIframeRef = c =>  {\n    this.iframe = c;\n  };\n\n  handleTextareaClick = (e) => {\n    e.target.select();\n  };\n\n  render () {\n    const { intl, onClose } = this.props;\n    const { oembed } = this.state;\n\n    return (\n      <div className='modal-root__modal report-modal embed-modal'>\n        <div className='report-modal__target'>\n          <IconButton className='media-modal__close' title={intl.formatMessage(messages.close)} icon='times' onClick={onClose} size={16} />\n          <FormattedMessage id='status.embed' defaultMessage='Embed' />\n        </div>\n\n        <div className='report-modal__container embed-modal__container' style={{ display: 'block' }}>\n          <p className='hint'>\n            <FormattedMessage id='embed.instructions' defaultMessage='Embed this status on your website by copying the code below.' />\n          </p>\n\n          <input\n            type='text'\n            className='embed-modal__html'\n            readOnly\n            value={oembed && oembed.html || ''}\n            onClick={this.handleTextareaClick}\n          />\n\n          <p className='hint'>\n            <FormattedMessage id='embed.preview' defaultMessage='Here is what it will look like:' />\n          </p>\n\n          <iframe\n            className='embed-modal__iframe'\n            frameBorder='0'\n            ref={this.setIframeRef}\n            sandbox='allow-scripts allow-same-origin'\n            title='preview'\n          />\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default injectIntl(EmbedModal);\n"],"sourceRoot":""}