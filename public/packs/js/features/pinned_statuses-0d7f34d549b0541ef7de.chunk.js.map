{"version":3,"sources":["webpack:///./app/javascript/mastodon/features/pinned_statuses/index.jsx"],"names":["messages","defineMessages","heading","id","defaultMessage","PinnedStatuses","ImmutablePureComponent","constructor","arguments","handleHeaderClick","this","column","scrollTop","setRef","c","UNSAFE_componentWillMount","props","dispatch","fetchPinnedStatuses","render","intl","statusIds","hasMore","multiColumn","_jsxs","Column","bindToDocument","icon","formatMessage","ref","children","_jsx","ColumnBackButtonSlim","StatusList","scrollKey","Helmet","name","content","propTypes","PropTypes","func","isRequired","ImmutablePropTypes","list","object","bool","connect","state","getStatusList","getIn","injectIntl"],"mappings":"4OAiBA,MAAMA,EAAWC,YAAe,CAC9BC,QAAS,CAAEC,GAAG,cAAgBC,eAAe,iBAQ/C,MAAMC,UAAuBC,IAAuBC,cAAA,SAAAC,WAAA,KAclDC,kBAAoB,KAClBC,KAAKC,OAAOC,WAAW,EACvB,KAEFC,OAASC,IACPJ,KAAKC,OAASG,CAAC,CACf,CAVFC,4BACEL,KAAKM,MAAMC,SAASC,cACtB,CAUAC,SACE,MAAM,KAAEC,EAAI,UAAEC,EAAS,QAAEC,EAAO,YAAEC,GAAgBb,KAAKM,MAEvD,OACEQ,eAACC,IAAM,CAACC,gBAAiBH,EAAaI,KAAK,aAAazB,QAASkB,EAAKQ,cAAc5B,EAASE,SAAU2B,IAAKnB,KAAKG,OAAOiB,SAAA,CACtHC,YAACC,IAAoB,IACrBD,YAACE,IAAU,CACTZ,UAAWA,EACXa,UAAU,kBACVZ,QAASA,EACTI,gBAAiBH,IAEnBQ,YAACI,IAAM,UACLJ,YAAA,QAAMK,KAAK,SAASC,QAAQ,eAIpC,EAvCIhC,EAEGiC,UAAY,CACjBrB,SAAUsB,IAAUC,KAAKC,WACzBpB,UAAWqB,IAAmBC,KAAKF,WACnCrB,KAAMmB,IAAUK,OAAOH,WACvBnB,QAASiB,IAAUM,KAAKJ,WACxBlB,YAAagB,IAAUM,MAoCZC,6BAhDSC,IAAK,CAC3B1B,UAAW2B,YAAcD,EAAO,QAChCzB,UAAWyB,EAAME,MAAM,CAAC,eAAgB,OAAQ,YA8CnCH,CAAyBI,YAAW7C,G","file":"js/features/pinned_statuses-0d7f34d549b0541ef7de.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nimport { defineMessages, injectIntl } from 'react-intl';\n\nimport { Helmet } from 'react-helmet';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { connect } from 'react-redux';\n\nimport { getStatusList } from 'mastodon/selectors';\n\nimport { fetchPinnedStatuses } from '../../actions/pin_statuses';\nimport ColumnBackButtonSlim from '../../components/column_back_button_slim';\nimport StatusList from '../../components/status_list';\nimport Column from '../ui/components/column';\n\nconst messages = defineMessages({\n  heading: { id: 'column.pins', defaultMessage: 'Pinned post' },\n});\n\nconst mapStateToProps = state => ({\n  statusIds: getStatusList(state, 'pins'),\n  hasMore: !!state.getIn(['status_lists', 'pins', 'next']),\n});\n\nclass PinnedStatuses extends ImmutablePureComponent {\n\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    statusIds: ImmutablePropTypes.list.isRequired,\n    intl: PropTypes.object.isRequired,\n    hasMore: PropTypes.bool.isRequired,\n    multiColumn: PropTypes.bool,\n  };\n\n  UNSAFE_componentWillMount () {\n    this.props.dispatch(fetchPinnedStatuses());\n  }\n\n  handleHeaderClick = () => {\n    this.column.scrollTop();\n  };\n\n  setRef = c => {\n    this.column = c;\n  };\n\n  render () {\n    const { intl, statusIds, hasMore, multiColumn } = this.props;\n\n    return (\n      <Column bindToDocument={!multiColumn} icon='thumb-tack' heading={intl.formatMessage(messages.heading)} ref={this.setRef}>\n        <ColumnBackButtonSlim />\n        <StatusList\n          statusIds={statusIds}\n          scrollKey='pinned_statuses'\n          hasMore={hasMore}\n          bindToDocument={!multiColumn}\n        />\n        <Helmet>\n          <meta name='robots' content='noindex' />\n        </Helmet>\n      </Column>\n    );\n  }\n\n}\n\nexport default connect(mapStateToProps)(injectIntl(PinnedStatuses));\n"],"sourceRoot":""}