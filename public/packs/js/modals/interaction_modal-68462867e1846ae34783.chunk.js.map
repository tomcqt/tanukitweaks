{"version":3,"sources":["webpack:///./app/javascript/mastodon/features/interaction_modal/index.jsx","webpack:///./node_modules/lodash/escapeRegExp.js"],"names":["messages","defineMessages","loginPrompt","id","defaultMessage","PERSISTENCE_KEY","valueToDomain","value","test","url","URL","pathname","length","host","includes","replace","split","addInputToOptions","options","trim","hostname","isValidDomain","concat","filter","x","LoginForm","React","PureComponent","constructor","arguments","state","localStorage","getItem","expanded","selectedOption","isLoading","isSubmitting","error","networkOptions","setRef","c","this","input","isValueValid","likelyAcct","startsWith","slice","_","handleChange","_ref2","target","setState","_loadOptions","handleMessage","event","_event$data","_event$data2","resourceUrl","props","origin","window","source","iframeRef","contentWindow","data","type","template","encodeURIComponent","setItem","uri_or_domain","location","href","e","console","handleSubmit","postMessage","setIFrameRef","iframe","handleFocus","handleBlur","handleKeyDown","key","preventDefault","Math","min","max","handleOptionClick","index","Number","currentTarget","getAttribute","option","_throttle","domain","api","get","params","q","then","_ref3","catch","leading","trailing","componentDidMount","addEventListener","componentWillUnmount","removeEventListener","render","intl","domainRegExp","RegExp","_escapeRegExp","hasPopOut","_jsx2","className","classNames","focused","invalid","_jsx","ref","style","display","src","sandbox","title","placeholder","formatMessage","autoFocus","onChange","onFocus","onBlur","onKeyDown","autocomplete","autocapitalize","spellcheck","Button","onClick","disabled","FormattedMessage","map","i","onMouseDown","selected","part","toLowerCase","IntlLoginForm","injectIntl","InteractionModal","handleSignupClick","onSignupClick","displayNameHtml","signupUrl","name","dangerouslySetInnerHTML","__html","actionDescription","icon","signupButton","Icon","values","sso_redirect","registrationsOpen","connect","mapStateToProps","_ref","accountId","getIn","dispatch","closeModal","modalType","undefined","ignoreFocus","openModal","toString","reRegExpChar","reHasRegExpChar","module","exports","string"],"mappings":"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","file":"js/modals/interaction_modal-68462867e1846ae34783.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport React from 'react';\n\nimport { FormattedMessage, defineMessages, injectIntl } from 'react-intl';\n\nimport classNames from 'classnames';\n\nimport { connect } from 'react-redux';\n\nimport { throttle, escapeRegExp } from 'lodash';\n\nimport { openModal, closeModal } from 'mastodon/actions/modal';\nimport api from 'mastodon/api';\nimport Button from 'mastodon/components/button';\nimport { Icon }  from 'mastodon/components/icon';\nimport { registrationsOpen, sso_redirect } from 'mastodon/initial_state';\n\nconst messages = defineMessages({\n  loginPrompt: { id: 'interaction_modal.login.prompt', defaultMessage: 'Domain of your home server, e.g. mastodon.social' },\n});\n\nconst mapStateToProps = (state, { accountId }) => ({\n  displayNameHtml: state.getIn(['accounts', accountId, 'display_name_html']),\n  signupUrl: state.getIn(['server', 'server', 'registrations', 'url'], null) || '/auth/sign_up',\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSignupClick() {\n    dispatch(closeModal({\n        modalType: undefined,\n        ignoreFocus: false,\n      }));\n    dispatch(openModal({ modalType: 'CLOSED_REGISTRATIONS' }));\n  },\n});\n\nconst PERSISTENCE_KEY = 'mastodon_home';\n\nconst isValidDomain = value => {\n  const url = new URL('https:///path');\n  url.hostname = value;\n  return url.hostname === value;\n};\n\nconst valueToDomain = value => {\n  // If the user starts typing an URL\n  if (/^https?:\\/\\//.test(value)) {\n    try {\n      const url = new URL(value);\n\n      // Consider that if there is a path, the URL is more meaningful than a bare domain\n      if (url.pathname.length > 1) {\n        return '';\n      }\n\n      return url.host;\n    } catch {\n      return undefined;\n    }\n  // If the user writes their full handle including username\n  } else if (value.includes('@')) {\n    if (value.replace(/^@/, '').split('@').length > 2) {\n      return undefined;\n    }\n    return '';\n  }\n\n  return value;\n};\n\nconst addInputToOptions = (value, options) => {\n  value = value.trim();\n\n  if (value.includes('.') && isValidDomain(value)) {\n    return [value].concat(options.filter((x) => x !== value));\n  }\n\n  return options;\n};\n\nclass LoginForm extends React.PureComponent {\n\n  static propTypes = {\n    resourceUrl: PropTypes.string,\n    intl: PropTypes.object.isRequired,\n  };\n\n  state = {\n    value: localStorage ? (localStorage.getItem(PERSISTENCE_KEY) || '') : '',\n    expanded: false,\n    selectedOption: -1,\n    isLoading: false,\n    isSubmitting: false,\n    error: false,\n    options: [],\n    networkOptions: [],\n  };\n\n  setRef = c => {\n    this.input = c;\n  };\n\n  isValueValid = (value) => {\n    let likelyAcct = false;\n    let url = null;\n\n    if (value.startsWith('/')) {\n      return false;\n    }\n\n    if (value.startsWith('@')) {\n      value = value.slice(1);\n      likelyAcct = true;\n    }\n\n    // The user is in the middle of typing something, do not error out\n    if (value === '') {\n      return true;\n    }\n\n    if (/^https?:\\/\\//.test(value) && !likelyAcct) {\n      url = value;\n    } else {\n      url = `https://${value}`;\n    }\n\n    try {\n      new URL(url);\n      return true;\n    } catch(_) {\n      return false;\n    }\n  };\n\n  handleChange = ({ target }) => {\n    const error = !this.isValueValid(target.value);\n    this.setState(state => ({ error, value: target.value, isLoading: true, options: addInputToOptions(target.value, state.networkOptions) }), () => this._loadOptions());\n  };\n\n  handleMessage = (event) => {\n    const { resourceUrl } = this.props;\n\n    if (event.origin !== window.origin || event.source !== this.iframeRef.contentWindow) {\n      return;\n    }\n\n    if (event.data?.type === 'fetchInteractionURL-failure') {\n      this.setState({ isSubmitting: false, error: true });\n    } else if (event.data?.type === 'fetchInteractionURL-success') {\n      if (/^https?:\\/\\//.test(event.data.template)) {\n        try {\n          const url = new URL(event.data.template.replace('{uri}', encodeURIComponent(resourceUrl)));\n\n          if (localStorage) {\n            localStorage.setItem(PERSISTENCE_KEY, event.data.uri_or_domain);\n          }\n\n          window.location.href = url;\n        } catch (e) {\n          console.error(e);\n          this.setState({ isSubmitting: false, error: true });\n        }\n      } else {\n        this.setState({ isSubmitting: false, error: true });\n      }\n    }\n  };\n\n  componentDidMount () {\n    window.addEventListener('message', this.handleMessage);\n  }\n\n  componentWillUnmount () {\n    window.removeEventListener('message', this.handleMessage);\n  }\n\n  handleSubmit = () => {\n    const { value } = this.state;\n\n    this.setState({ isSubmitting: true });\n\n    this.iframeRef.contentWindow.postMessage({\n      type: 'fetchInteractionURL',\n      uri_or_domain: value.trim(),\n    }, window.origin);\n  };\n\n  setIFrameRef = (iframe) => {\n    this.iframeRef = iframe;\n  }\n\n  handleFocus = () => {\n    this.setState({ expanded: true });\n  };\n\n  handleBlur = () => {\n    this.setState({ expanded: false });\n  };\n\n  handleKeyDown = (e) => {\n    const { options, selectedOption } = this.state;\n\n    switch(e.key) {\n    case 'ArrowDown':\n      e.preventDefault();\n\n      if (options.length > 0) {\n        this.setState({ selectedOption: Math.min(selectedOption + 1, options.length - 1) });\n      }\n\n      break;\n    case 'ArrowUp':\n      e.preventDefault();\n\n      if (options.length > 0) {\n        this.setState({ selectedOption: Math.max(selectedOption - 1, -1) });\n      }\n\n      break;\n    case 'Enter':\n      e.preventDefault();\n\n      if (selectedOption === -1) {\n        this.handleSubmit();\n      } else if (options.length > 0) {\n        this.setState({ value: options[selectedOption], error: false }, () => this.handleSubmit());\n      }\n\n      break;\n    }\n  };\n\n  handleOptionClick = e => {\n    const index  = Number(e.currentTarget.getAttribute('data-index'));\n    const option = this.state.options[index];\n\n    e.preventDefault();\n    this.setState({ selectedOption: index, value: option, error: false }, () => this.handleSubmit());\n  };\n\n  _loadOptions = throttle(() => {\n    const { value } = this.state;\n\n    const domain = valueToDomain(value.trim());\n\n    if (typeof domain === 'undefined') {\n      this.setState({ options: [], networkOptions: [], isLoading: false, error: true });\n      return;\n    }\n\n    if (domain.length === 0) {\n      this.setState({ options: [], networkOptions: [], isLoading: false });\n      return;\n    }\n\n    api().get('/api/v1/peers/search', { params: { q: domain } }).then(({ data }) => {\n      if (!data) {\n        data = [];\n      }\n\n      this.setState((state) => ({ networkOptions: data, options: addInputToOptions(state.value, data), isLoading: false }));\n    }).catch(() => {\n      this.setState({ isLoading: false });\n    });\n  }, 200, { leading: true, trailing: true });\n\n  render () {\n    const { intl } = this.props;\n    const { value, expanded, options, selectedOption, error, isSubmitting } = this.state;\n    const domain = (valueToDomain(value) || '').trim();\n    const domainRegExp = new RegExp(`(${escapeRegExp(domain)})`, 'gi');\n    const hasPopOut = domain.length > 0 && options.length > 0;\n\n    return (\n      <div className={classNames('interaction-modal__login', { focused: expanded, expanded: hasPopOut, invalid: error })}>\n\n        <iframe\n          ref={this.setIFrameRef}\n          style={{display: 'none'}}\n          src='/remote_interaction_helper'\n          sandbox='allow-scripts allow-same-origin'\n          title='remote interaction helper'\n        />\n\n        <div className='interaction-modal__login__input'>\n          <input\n            ref={this.setRef}\n            type='text'\n            value={value}\n            placeholder={intl.formatMessage(messages.loginPrompt)}\n            aria-label={intl.formatMessage(messages.loginPrompt)}\n            autoFocus\n            onChange={this.handleChange}\n            onFocus={this.handleFocus}\n            onBlur={this.handleBlur}\n            onKeyDown={this.handleKeyDown}\n            autocomplete='off'\n            autocapitalize='off'\n            spellcheck='false'\n          />\n\n          <Button onClick={this.handleSubmit} disabled={isSubmitting || error}><FormattedMessage id='interaction_modal.login.action' defaultMessage='Take me home' /></Button>\n        </div>\n\n        {hasPopOut && (\n          <div className='search__popout'>\n            <div className='search__popout__menu'>\n              {options.map((option, i) => (\n                <button key={option} onMouseDown={this.handleOptionClick} data-index={i} className={classNames('search__popout__menu__item', { selected: selectedOption === i })}>\n                  {option.split(domainRegExp).map((part, i) => (\n                    part.toLowerCase() === domain.toLowerCase() ? (\n                      <mark key={i}>\n                        {part}\n                      </mark>\n                    ) : (\n                      <span key={i}>\n                        {part}\n                      </span>\n                    )\n                  ))}\n                </button>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n    );\n  }\n\n}\n\nconst IntlLoginForm = injectIntl(LoginForm);\n\nclass InteractionModal extends React.PureComponent {\n\n  static propTypes = {\n    displayNameHtml: PropTypes.string,\n    url: PropTypes.string,\n    type: PropTypes.oneOf(['reply', 'reblog', 'favourite', 'follow']),\n    onSignupClick: PropTypes.func.isRequired,\n    signupUrl: PropTypes.string.isRequired,\n  };\n\n  handleSignupClick = () => {\n    this.props.onSignupClick();\n  };\n\n  render () {\n    const { url, type, displayNameHtml, signupUrl } = this.props;\n\n    const name = <bdi dangerouslySetInnerHTML={{ __html: displayNameHtml }} />;\n\n    let title, actionDescription, icon;\n\n    switch(type) {\n    case 'reply':\n      icon = <Icon id='reply' />;\n      title = <FormattedMessage id='interaction_modal.title.reply' defaultMessage=\"Reply to {name}'s post\" values={{ name }} />;\n      actionDescription = <FormattedMessage id='interaction_modal.description.reply' defaultMessage='With an account on Mastodon, you can respond to this post.' />;\n      break;\n    case 'reblog':\n      icon = <Icon id='retweet' />;\n      title = <FormattedMessage id='interaction_modal.title.reblog' defaultMessage=\"Boost {name}'s post\" values={{ name }} />;\n      actionDescription = <FormattedMessage id='interaction_modal.description.reblog' defaultMessage='With an account on Mastodon, you can boost this post to share it with your own followers.' />;\n      break;\n    case 'favourite':\n      icon = <Icon id='star' />;\n      title = <FormattedMessage id='interaction_modal.title.favourite' defaultMessage=\"Favorite {name}'s post\" values={{ name }} />;\n      actionDescription = <FormattedMessage id='interaction_modal.description.favourite' defaultMessage='With an account on Mastodon, you can favorite this post to let the author know you appreciate it and save it for later.' />;\n      break;\n    case 'follow':\n      icon = <Icon id='user-plus' />;\n      title = <FormattedMessage id='interaction_modal.title.follow' defaultMessage='Follow {name}' values={{ name }} />;\n      actionDescription = <FormattedMessage id='interaction_modal.description.follow' defaultMessage='With an account on Mastodon, you can follow {name} to receive their posts in your home feed.' values={{ name }} />;\n      break;\n    }\n\n    let signupButton;\n\n    if (sso_redirect) {\n      signupButton = (\n        <a href={sso_redirect} data-method='post' className='link-button'>\n          <FormattedMessage id='sign_in_banner.create_account' defaultMessage='Create account' />\n        </a>\n      );\n    } else if (registrationsOpen) {\n      signupButton = (\n        <a href={signupUrl} className='link-button'>\n          <FormattedMessage id='sign_in_banner.create_account' defaultMessage='Create account' />\n        </a>\n      );\n    } else {\n      signupButton = (\n        <button className='link-button' onClick={this.handleSignupClick}>\n          <FormattedMessage id='sign_in_banner.create_account' defaultMessage='Create account' />\n        </button>\n      );\n    }\n\n    return (\n      <div className='modal-root__modal interaction-modal'>\n        <div className='interaction-modal__lead'>\n          <h3><span className='interaction-modal__icon'>{icon}</span> {title}</h3>\n          <p>{actionDescription} <strong><FormattedMessage id='interaction_modal.sign_in' defaultMessage='You are not logged in to this server. Where is your account hosted?' /></strong></p>\n        </div>\n\n        <IntlLoginForm resourceUrl={url} />\n\n        <p className='hint'><FormattedMessage id='interaction_modal.sign_in_hint' defaultMessage=\"Tip: That's the website where you signed up. If you don't remember, look for the welcome e-mail in your inbox. You can also enter your full username! (e.g. @Mastodon@mastodon.social)\" /></p>\n        <p><FormattedMessage id='interaction_modal.no_account_yet' defaultMessage='Not on Mastodon?' /> {signupButton}</p>\n      </div>\n    );\n  }\n\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(InteractionModal);\n","var toString = require('./toString');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n  reHasRegExpChar = RegExp(reRegExpChar.source);\n\n/**\n * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to escape.\n * @returns {string} Returns the escaped string.\n * @example\n *\n * _.escapeRegExp('[lodash](https://lodash.com/)');\n * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n */\nfunction escapeRegExp(string) {\n  string = toString(string);\n  return string && reHasRegExpChar.test(string) ? string.replace(reRegExpChar, '\\\\$&') : string;\n}\nmodule.exports = escapeRegExp;"],"sourceRoot":""}