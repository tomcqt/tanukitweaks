{"version":3,"sources":["webpack:///./app/javascript/mastodon/features/ui/components/block_modal.jsx"],"names":["BlockModal","PureComponent","constructor","arguments","handleClick","this","props","onClose","onConfirm","account","handleSecondary","onBlockAndReport","handleCancel","setRef","c","button","componentDidMount","focus","render","_jsx","className","FormattedMessage","id","defaultMessage","values","name","get","Button","onClick","_jsx2","ref","children","connect","makeMapStateToProps","getAccount","makeGetAccount","state","getIn","dispatch","blockAccount","initReport","closeModal","modalType","undefined","ignoreFocus","injectIntl"],"mappings":"8LA2CA,MAAMA,UAAmBC,gBAAcC,cAAA,SAAAC,WAAA,KAcrCC,YAAc,KACZC,KAAKC,MAAMC,UACXF,KAAKC,MAAME,UAAUH,KAAKC,MAAMG,QAAQ,EACxC,KAEFC,gBAAkB,KAChBL,KAAKC,MAAMC,UACXF,KAAKC,MAAMK,iBAAiBN,KAAKC,MAAMG,QAAQ,EAC/C,KAEFG,aAAe,KACbP,KAAKC,MAAMC,SAAS,EACpB,KAEFM,OAAUC,IACRT,KAAKU,OAASD,CAAC,CACf,CApBFE,oBACEX,KAAKU,OAAOE,OACd,CAoBAC,SACE,MAAM,QAAET,GAAYJ,KAAKC,MAEzB,OACEa,YAAA,OAAKC,UAAU,sCAA+B,EAC5CD,YAAA,OAAKC,UAAU,+BAAwB,EACrCD,YAAA,cACEA,YAACE,IAAgB,CACfC,GAAE,8BACFC,eAAe,yCACfC,OAAQ,CAAEC,KAAMN,YAAA,mBAAQ,IAAEV,EAAQiB,IAAI,cAK5CP,YAAA,OAAKC,UAAU,gCAAyB,EACtCD,YAACQ,IAAM,CAACC,QAASvB,KAAKO,aAAcQ,UAAU,mCAA4B,EACxED,YAACE,IAAgB,CAACC,GAAE,4BAA6BC,eAAe,YAElEJ,YAACQ,IAAM,CAACC,QAASvB,KAAKK,gBAAiBU,UAAU,6CAAsC,EACrFD,YAACE,IAAgB,CAACC,GAAE,uCAAwCC,eAAe,oBAE7EM,cAACF,IAAM,CAACC,QAASvB,KAAKD,YAAa0B,IAAKzB,KAAKQ,OAAOkB,SAClDZ,YAACE,IAAgB,CAACC,GAAE,8BAA+BC,eAAe,aAK5E,EAIaS,6BA9FaC,KAC1B,MAAMC,EAAaC,cAMnB,OAJwBC,IAAK,CAC3B3B,QAASyB,EAAWE,EAAOA,EAAMC,MAAM,CAAC,SAAU,MAAO,iBAGrC,IAGGC,IAClB,CACL9B,UAAUC,GACR6B,EAASC,YAAa9B,EAAQiB,IAAI,OACpC,EAEAf,iBAAiBF,GACf6B,EAASC,YAAa9B,EAAQiB,IAAI,QAClCY,EAASE,YAAW/B,GACtB,EAEAF,UACE+B,EAASG,YAAW,CAClBC,eAAWC,EACXC,aAAa,IAEjB,KAoEWZ,CAAiDa,YAAW7C,G","file":"js/modals/block_modal-903397a37a54f2417f5a.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { injectIntl, FormattedMessage } from 'react-intl';\n\nimport { connect } from 'react-redux';\n\nimport { blockAccount } from '../../../actions/accounts';\nimport { closeModal } from '../../../actions/modal';\nimport { initReport } from '../../../actions/reports';\nimport Button from '../../../components/button';\nimport { makeGetAccount } from '../../../selectors';\n\nconst makeMapStateToProps = () => {\n  const getAccount = makeGetAccount();\n\n  const mapStateToProps = state => ({\n    account: getAccount(state, state.getIn(['blocks', 'new', 'account_id'])),\n  });\n\n  return mapStateToProps;\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    onConfirm(account) {\n      dispatch(blockAccount(account.get('id')));\n    },\n\n    onBlockAndReport(account) {\n      dispatch(blockAccount(account.get('id')));\n      dispatch(initReport(account));\n    },\n\n    onClose() {\n      dispatch(closeModal({\n        modalType: undefined,\n        ignoreFocus: false,\n      }));\n    },\n  };\n};\n\nclass BlockModal extends PureComponent {\n\n  static propTypes = {\n    account: PropTypes.object.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onBlockAndReport: PropTypes.func.isRequired,\n    onConfirm: PropTypes.func.isRequired,\n    intl: PropTypes.object.isRequired,\n  };\n\n  componentDidMount() {\n    this.button.focus();\n  }\n\n  handleClick = () => {\n    this.props.onClose();\n    this.props.onConfirm(this.props.account);\n  };\n\n  handleSecondary = () => {\n    this.props.onClose();\n    this.props.onBlockAndReport(this.props.account);\n  };\n\n  handleCancel = () => {\n    this.props.onClose();\n  };\n\n  setRef = (c) => {\n    this.button = c;\n  };\n\n  render () {\n    const { account } = this.props;\n\n    return (\n      <div className='modal-root__modal block-modal'>\n        <div className='block-modal__container'>\n          <p>\n            <FormattedMessage\n              id='confirmations.block.message'\n              defaultMessage='Are you sure you want to block {name}?'\n              values={{ name: <strong>@{account.get('acct')}</strong> }}\n            />\n          </p>\n        </div>\n\n        <div className='block-modal__action-bar'>\n          <Button onClick={this.handleCancel} className='block-modal__cancel-button'>\n            <FormattedMessage id='confirmation_modal.cancel' defaultMessage='Cancel' />\n          </Button>\n          <Button onClick={this.handleSecondary} className='confirmation-modal__secondary-button'>\n            <FormattedMessage id='confirmations.block.block_and_report' defaultMessage='Block & Report' />\n          </Button>\n          <Button onClick={this.handleClick} ref={this.setRef}>\n            <FormattedMessage id='confirmations.block.confirm' defaultMessage='Block' />\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default connect(makeMapStateToProps, mapDispatchToProps)(injectIntl(BlockModal));\n"],"sourceRoot":""}