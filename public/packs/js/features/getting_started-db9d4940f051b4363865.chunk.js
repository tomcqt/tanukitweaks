(window.webpackJsonp=window.webpackJsonp||[]).push([[465],{1174:function(e,t,a){"use strict";a.r(t);var s=a(0),i=a(1),o=a.n(i),n=a(7),r=a(39),l=a(82),c=a(3),u=a(16),d=a.n(u),b=a(18),m=a(11),g=a(10),f=a(149),p=a(240),_=a(256),v=a(5),M=a(259),j=a(75),h=a(1166),O=a(419);const x=Object(n.d)({home_timeline:{id:"tabs_bar.home",defaultMessage:"Home"},notifications:{id:"tabs_bar.notifications",defaultMessage:"Notifications"},public_timeline:{id:"navigation_bar.public_timeline",defaultMessage:"Federated timeline"},settings_subheading:{id:"column_subheading.settings",defaultMessage:"Settings"},community_timeline:{id:"navigation_bar.community_timeline",defaultMessage:"Local timeline"},explore:{id:"navigation_bar.explore",defaultMessage:"Explore"},direct:{id:"navigation_bar.direct",defaultMessage:"Private mentions"},bookmarks:{id:"navigation_bar.bookmarks",defaultMessage:"Bookmarks"},preferences:{id:"navigation_bar.preferences",defaultMessage:"Preferences"},follow_requests:{id:"navigation_bar.follow_requests",defaultMessage:"Follow requests"},favourites:{id:"navigation_bar.favourites",defaultMessage:"Favorites"},blocks:{id:"navigation_bar.blocks",defaultMessage:"Blocked users"},domain_blocks:{id:"navigation_bar.domain_blocks",defaultMessage:"Blocked domains"},mutes:{id:"navigation_bar.mutes",defaultMessage:"Muted users"},pins:{id:"navigation_bar.pins",defaultMessage:"Pinned posts"},lists:{id:"navigation_bar.lists",defaultMessage:"Lists"},discover:{id:"navigation_bar.discover",defaultMessage:"Discover"},personal:{id:"navigation_bar.personal",defaultMessage:"Personal"},security:{id:"navigation_bar.security",defaultMessage:"Security"},menu:{id:"getting_started.heading",defaultMessage:"Getting started"}});class k extends b.a{componentDidMount(){const{fetchFollowRequests:e}=this.props,{signedIn:t}=this.context.identity;t&&e()}render(){const{intl:e,myAccount:t,multiColumn:a,unreadFollowRequests:i}=this.props,{signedIn:o}=this.context.identity,n=[];var r,c;return n.push(Object(s.a)(h.a,{text:e.formatMessage(x.discover)},"header-discover")),v.v&&n.push(Object(s.a)(j.a,{icon:"hashtag",text:e.formatMessage(x.explore),to:"/explore"},"explore")),n.push(Object(s.a)(j.a,{icon:"users",text:e.formatMessage(x.community_timeline),to:"/public/local"},"community_timeline"),Object(s.a)(j.a,{icon:"globe",text:e.formatMessage(x.public_timeline),to:"/public"},"public_timeline")),o&&(n.push(Object(s.a)(h.a,{text:e.formatMessage(x.personal)},"header-personal"),Object(s.a)(j.a,{icon:"home",text:e.formatMessage(x.home_timeline),to:"/home"},"home"),Object(s.a)(j.a,{icon:"at",text:e.formatMessage(x.direct),to:"/conversations"},"direct"),Object(s.a)(j.a,{icon:"bookmark",text:e.formatMessage(x.bookmarks),to:"/bookmarks"},"bookmark"),Object(s.a)(j.a,{icon:"star",text:e.formatMessage(x.favourites),to:"/favourites"},"favourites"),Object(s.a)(j.a,{icon:"list-ul",text:e.formatMessage(x.lists),to:"/lists"},"lists")),(t.get("locked")||i>0)&&n.push(Object(s.a)(j.a,{icon:"user-plus",text:e.formatMessage(x.follow_requests),badge:(r=i,c=40,0===r?void 0:c&&r>=c?`${c}+`:r),to:"/follow_requests"},"follow_requests")),n.push(Object(s.a)(h.a,{text:e.formatMessage(x.settings_subheading)},"header-settings"),Object(s.a)(j.a,{icon:"gears",text:e.formatMessage(x.preferences),href:"/settings/preferences"},"preferences"))),Object(s.a)(f.a,{},void 0,o&&!a?Object(s.a)(M.a,{}):Object(s.a)(p.a,{title:e.formatMessage(x.menu),icon:"bars",multiColumn:a}),Object(s.a)("div",{className:"getting-started scrollable scrollable--flex"},void 0,Object(s.a)("div",{className:"getting-started__wrapper"},void 0,n),!a&&Object(s.a)("div",{className:"flex-spacer"}),Object(s.a)(_.a,{multiColumn:!0})),a&&v.v&&Object(s.a)(O.a,{}),Object(s.a)(l.a,{},void 0,Object(s.a)("title",{},void 0,e.formatMessage(x.menu)),Object(s.a)("meta",{name:"robots",content:"noindex"})))}}k.contextTypes={router:o.a.object.isRequired,identity:o.a.object},k.propTypes={intl:o.a.object.isRequired,myAccount:d.a.map,multiColumn:o.a.bool,fetchFollowRequests:o.a.func.isRequired,unreadFollowRequests:o.a.number,unreadNotifications:o.a.number},t.default=Object(m.connect)((e=>({myAccount:e.getIn(["accounts",v.o]),unreadFollowRequests:e.getIn(["user_lists","follow_requests","items"],Object(c.List)()).size})),(e=>({fetchFollowRequests:()=>e(Object(g.P)())})))(Object(r.c)(k))}}]);
//# sourceMappingURL=getting_started-db9d4940f051b4363865.chunk.js.map