{"version":3,"sources":["webpack:///./app/javascript/mastodon/features/compose/components/search_results.jsx","webpack:///./app/javascript/mastodon/features/compose/containers/search_results_container.js","webpack:///./app/javascript/mastodon/features/compose/index.jsx"],"names":["INITIAL_PAGE_LIMIT","withoutLastResult","list","size","skipLast","SearchResults","ImmutablePureComponent","constructor","arguments","handleLoadMoreAccounts","this","props","expandSearch","handleLoadMoreStatuses","handleLoadMoreHashtags","render","results","accounts","statuses","hashtags","get","_jsx","SearchSection","title","_jsxs","_Fragment","children","Icon","id","fixedWidth","FormattedMessage","defaultMessage","map","accountId","AccountContainer","LoadMore","visible","onClick","hashtag","Hashtag","statusId","StatusContainer","className","propTypes","ImmutablePropTypes","isRequired","PropTypes","func","searchTerm","string","connect","state","getIn","suggestions","dispatch","fetchSuggestions","type","dismissSuggestion","account","messages","defineMessages","start","home_timeline","notifications","public","community","preferences","logout","compose","logoutMessage","logoutConfirm","Compose","PureComponent","handleLogoutClick","e","intl","preventDefault","stopPropagation","openModal","modalType","modalProps","message","formatMessage","confirm","closeWhenConfirm","onConfirm","logOut","onFocus","changeComposing","onBlur","componentDidMount","mountCompose","componentWillUnmount","unmountCompose","multiColumn","showSearch","columns","role","Link","to","some","column","href","SearchContainer","NavigationContainer","onClose","ComposeFormContainer","autoFocus","isMobile","window","innerWidth","alt","draggable","src","mascot","elephantUIPlane","Motion","defaultStyle","x","style","spring","stiffness","damping","_ref","transform","visibility","SearchResultsContainer","Column","Helmet","name","content","mapStateToProps","ownProps","injectIntl"],"mappings":"2YAeA,MAAMA,EAAqB,GAErBC,EAAoBC,GACpBA,EAAKC,KAAOH,GAAsBE,EAAKC,KAAOH,GAAuB,EAChEE,EAAKE,SAAS,GAEdF,EAIX,MAAMG,UAAsBC,IAAuBC,cAAA,SAAAC,WAAA,KAQjDC,uBAAyB,IAAMC,KAAKC,MAAMC,aAAa,YAAY,KAEnEC,uBAAyB,IAAMH,KAAKC,MAAMC,aAAa,YAAY,KAEnEE,uBAAyB,IAAMJ,KAAKC,MAAMC,aAAa,WAAY,CAEnEG,SACE,MAAM,QAAEC,GAAYN,KAAKC,MAEzB,IAAIM,EAAUC,EAAUC,EA8BxB,OA5BIH,EAAQI,IAAI,aAAeJ,EAAQI,IAAI,YAAYjB,KAAO,IAC5Dc,EACEI,YAACC,IAAa,CAACC,MAAOC,eAAAC,WAAA,CAAAC,SAAA,CAAEL,YAACM,IAAI,CAACC,GAAG,QAAQC,YAAU,IAAGR,YAACS,IAAgB,CAACF,GAAE,0BAA2BG,eAAe,sBAAiB,EAClI9B,EAAkBe,EAAQI,IAAI,aAAaY,KAAIC,GAAaZ,YAACa,IAAgB,CAAiBN,GAAIK,GAAfA,KAClFjB,EAAQI,IAAI,YAAYjB,KAAOH,GAAsBgB,EAAQI,IAAI,YAAYjB,KAAOH,GAAuB,GAAMqB,YAACc,IAAQ,CAACC,SAAO,EAACC,QAAS3B,KAAKD,2BAKrJO,EAAQI,IAAI,aAAeJ,EAAQI,IAAI,YAAYjB,KAAO,IAC5DgB,EACEE,YAACC,IAAa,CAACC,MAAOC,eAAAC,WAAA,CAAAC,SAAA,CAAEL,YAACM,IAAI,CAACC,GAAG,UAAUC,YAAU,IAAGR,YAACS,IAAgB,CAACF,GAAE,0BAA2BG,eAAe,sBAAiB,EACpI9B,EAAkBe,EAAQI,IAAI,aAAaY,KAAIM,GAAWjB,YAACkB,IAAO,CAA2BD,QAASA,GAA9BA,EAAQlB,IAAI,WACnFJ,EAAQI,IAAI,YAAYjB,KAAOH,GAAsBgB,EAAQI,IAAI,YAAYjB,KAAOH,GAAuB,GAAMqB,YAACc,IAAQ,CAACC,SAAO,EAACC,QAAS3B,KAAKI,2BAKrJE,EAAQI,IAAI,aAAeJ,EAAQI,IAAI,YAAYjB,KAAO,IAC5De,EACEG,YAACC,IAAa,CAACC,MAAOC,eAAAC,WAAA,CAAAC,SAAA,CAAEL,YAACM,IAAI,CAACC,GAAG,cAAcC,YAAU,IAAGR,YAACS,IAAgB,CAACF,GAAE,0BAA2BG,eAAe,mBAAc,EACrI9B,EAAkBe,EAAQI,IAAI,aAAaY,KAAIQ,GAAYnB,YAACoB,IAAe,CAAgBb,GAAIY,GAAdA,KAChFxB,EAAQI,IAAI,YAAYjB,KAAOH,GAAsBgB,EAAQI,IAAI,YAAYjB,KAAOH,GAAuB,GAAMqB,YAACc,IAAQ,CAACC,SAAO,EAACC,QAAS3B,KAAKG,2BAOvJQ,YAAA,OAAKqB,UAAU,uBAAgB,EAC7BrB,YAAA,OAAKqB,UAAU,+BAAwB,EACrCrB,YAACM,IAAI,CAACC,GAAG,SAASC,YAAU,IAC5BR,YAACS,IAAgB,CAACF,GAAE,yBAA0BG,eAAe,oBAG9Dd,EACAE,EACAD,EAGP,EA3DIb,EAEGsC,UAAY,CACjB3B,QAAS4B,IAAmBZ,IAAIa,WAChCjC,aAAckC,IAAUC,KAAKF,WAC7BG,WAAYF,IAAUG,QA0DX5C,QCrEA6C,yBAZSC,IAAK,CAC3BnC,QAASmC,EAAMC,MAAM,CAAC,SAAU,YAChCC,YAAaF,EAAMC,MAAM,CAAC,cAAe,UACzCJ,WAAYG,EAAMC,MAAM,CAAC,SAAU,mBAGVE,IAAQ,CACjCC,iBAAkBA,IAAMD,EAASC,eACjC3C,aAAc4C,GAAQF,EAAS1C,YAAa4C,IAC5CC,kBAAmBC,GAAWJ,EAASG,YAAkBC,EAAQtC,IAAI,WAGxD8B,CAA6C7C,GCU5D,MAAMsD,EAAWC,YAAe,CAC9BC,MAAO,CAAEjC,GAAG,0BAA4BG,eAAe,mBACvD+B,cAAe,CAAElC,GAAG,gBAAkBG,eAAe,QACrDgC,cAAe,CAAEnC,GAAG,yBAA2BG,eAAe,iBAC9DiC,OAAQ,CAAEpC,GAAG,iCAAmCG,eAAe,sBAC/DkC,UAAW,CAAErC,GAAG,oCAAsCG,eAAe,kBACrEmC,YAAa,CAAEtC,GAAG,6BAA+BG,eAAe,eAChEoC,OAAQ,CAAEvC,GAAG,wBAA0BG,eAAe,UACtDqC,QAAS,CAAExC,GAAG,yBAA2BG,eAAe,oBACxDsC,cAAe,CAAEzC,GAAG,+BAAiCG,eAAe,qCACpEuC,cAAe,CAAE1C,GAAG,+BAAiCG,eAAe,aAQtE,MAAMwC,UAAgBC,gBAAcjE,cAAA,SAAAC,WAAA,KAoBlCiE,kBAAoBC,IAClB,MAAM,SAAEpB,EAAQ,KAAEqB,GAASjE,KAAKC,MAehC,OAbA+D,EAAEE,iBACFF,EAAEG,kBAEFvB,EAASwB,YAAU,CACjBC,UAAW,UACXC,WAAY,CACVC,QAASN,EAAKO,cAAcvB,EAASU,eACrCc,QAASR,EAAKO,cAAcvB,EAASW,eACrCc,kBAAkB,EAClBC,UAAWA,IAAMC,mBAId,CAAK,EACZ,KAEFC,QAAU,KACR7E,KAAKC,MAAM2C,SAASkC,cAAgB,GAAM,EAC1C,KAEFC,OAAS,KACP/E,KAAKC,MAAM2C,SAASkC,cAAgB,GAAO,CAC3C,CAnCFE,oBACE,MAAM,SAAEpC,GAAa5C,KAAKC,MAC1B2C,EAASqC,eACX,CAEAC,uBACE,MAAM,SAAEtC,GAAa5C,KAAKC,MAC1B2C,EAASuC,eACX,CA6BA9E,SACE,MAAM,YAAE+E,EAAW,WAAEC,EAAU,KAAEpB,GAASjE,KAAKC,MAE/C,GAAImF,EAAa,CACf,MAAM,QAAEE,GAAYtF,KAAKC,MAEzB,OACEU,YAAA,OAAKqB,UAAU,SAASuD,KAAK,SAAS,aAAYtB,EAAKO,cAAcvB,EAASS,eAAS,EACrF/C,YAAA,OAAKqB,UAAU,uBAAgB,EAC7BrB,YAAC6E,IAAI,CAACC,GAAG,mBAAmBzD,UAAU,cAAcnB,MAAOoD,EAAKO,cAAcvB,EAASE,OAAQ,aAAYc,EAAKO,cAAcvB,EAASE,aAAO,EAACxC,YAACM,IAAI,CAACC,GAAG,OAAOC,YAAU,MACvKmE,EAAQI,MAAKC,GAA+B,SAArBA,EAAOjF,IAAI,SAClCC,YAAC6E,IAAI,CAACC,GAAG,QAAQzD,UAAU,cAAcnB,MAAOoD,EAAKO,cAAcvB,EAASG,eAAgB,aAAYa,EAAKO,cAAcvB,EAASG,qBAAe,EAACzC,YAACM,IAAI,CAACC,GAAG,OAAOC,YAAU,MAE9KmE,EAAQI,MAAKC,GAA+B,kBAArBA,EAAOjF,IAAI,SAClCC,YAAC6E,IAAI,CAACC,GAAG,iBAAiBzD,UAAU,cAAcnB,MAAOoD,EAAKO,cAAcvB,EAASI,eAAgB,aAAYY,EAAKO,cAAcvB,EAASI,qBAAe,EAAC1C,YAACM,IAAI,CAACC,GAAG,OAAOC,YAAU,MAEvLmE,EAAQI,MAAKC,GAA+B,cAArBA,EAAOjF,IAAI,SAClCC,YAAC6E,IAAI,CAACC,GAAG,gBAAgBzD,UAAU,cAAcnB,MAAOoD,EAAKO,cAAcvB,EAASM,WAAY,aAAYU,EAAKO,cAAcvB,EAASM,iBAAW,EAAC5C,YAACM,IAAI,CAACC,GAAG,QAAQC,YAAU,MAE/KmE,EAAQI,MAAKC,GAA+B,WAArBA,EAAOjF,IAAI,SAClCC,YAAC6E,IAAI,CAACC,GAAG,UAAUzD,UAAU,cAAcnB,MAAOoD,EAAKO,cAAcvB,EAASK,QAAS,aAAYW,EAAKO,cAAcvB,EAASK,cAAQ,EAAC3C,YAACM,IAAI,CAACC,GAAG,QAAQC,YAAU,KAErKR,YAAA,KAAGiF,KAAK,wBAAwB5D,UAAU,cAAcnB,MAAOoD,EAAKO,cAAcvB,EAASO,aAAc,aAAYS,EAAKO,cAAcvB,EAASO,mBAAa,EAAC7C,YAACM,IAAI,CAACC,GAAG,MAAMC,YAAU,KACxLR,YAAA,KAAGiF,KAAK,iBAAiB5D,UAAU,cAAcnB,MAAOoD,EAAKO,cAAcvB,EAASQ,QAAS,aAAYQ,EAAKO,cAAcvB,EAASQ,QAAS9B,QAAS3B,KAAK+D,wBAAkB,EAACpD,YAACM,IAAI,CAACC,GAAG,WAAWC,YAAU,MAG9MiE,GAAezE,YAACkF,IAAe,IAEhClF,YAAA,OAAKqB,UAAU,sBAAe,EAC5BrB,YAAA,OAAKqB,UAAU,gBAAgB6C,QAAS7E,KAAK6E,cAAQ,EACnDlE,YAACmF,IAAmB,CAACC,QAAS/F,KAAK+E,SAEnCpE,YAACqF,IAAoB,CAACC,WAAYC,YAASC,OAAOC,cAElDzF,YAAA,OAAKqB,UAAU,gCAAyB,EACtCrB,YAAA,OAAK0F,IAAI,GAAGC,UAAU,QAAQC,IAAKC,KAAUC,cAIjD9F,YAAC+F,IAAM,CAACC,aAAc,CAAEC,GAAI,KAAOC,MAAO,CAAED,EAAGE,IAAOzB,EAAa,GAAK,IAAK,CAAE0B,UAAW,IAAKC,QAAS,YAAQ,GAC7GC,IAAA,IAAC,EAAEL,GAAGK,EAAA,OACLtG,YAAA,OAAKqB,UAAU,uBAAuB6E,MAAO,CAAEK,UAAY,cAAaN,MAAOO,YAAmB,MAAPP,EAAa,SAAW,iBAAY,EAC7HjG,YAACyG,EAAsB,IACnB,KAMlB,CAEA,OACEzG,YAAC0G,IAAM,CAACxC,QAAS7E,KAAK6E,cAAQ,EAC5BlE,YAACmF,IAAmB,CAACC,QAAS/F,KAAK+E,SACnCpE,YAACqF,IAAoB,IAErBrF,YAAC2G,IAAM,UACL3G,YAAA,QAAM4G,KAAK,SAASC,QAAQ,aAIpC,EAIahF,6BArHSiF,CAAChF,EAAOiF,KAAQ,CACtCpC,QAAS7C,EAAMC,MAAM,CAAC,WAAY,YAClC2C,aAAYqC,EAAStC,cAAc3C,EAAMC,MAAM,CAAC,SAAU,gBAAkBD,EAAMC,MAAM,CAAC,SAAU,eAmHtFF,CAAyBmF,YAAW9D,G","file":"js/features/compose-2b869c7a07a4327050c2.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nimport { FormattedMessage } from 'react-intl';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\n\nimport { Icon }  from 'mastodon/components/icon';\nimport { LoadMore } from 'mastodon/components/load_more';\nimport { SearchSection } from 'mastodon/features/explore/components/search_section';\n\nimport { ImmutableHashtag as Hashtag } from '../../../components/hashtag';\nimport AccountContainer from '../../../containers/account_container';\nimport StatusContainer from '../../../containers/status_container';\n\nconst INITIAL_PAGE_LIMIT = 10;\n\nconst withoutLastResult = list => {\n  if (list.size > INITIAL_PAGE_LIMIT && list.size % INITIAL_PAGE_LIMIT === 1) {\n    return list.skipLast(1);\n  } else {\n    return list;\n  }\n};\n\nclass SearchResults extends ImmutablePureComponent {\n\n  static propTypes = {\n    results: ImmutablePropTypes.map.isRequired,\n    expandSearch: PropTypes.func.isRequired,\n    searchTerm: PropTypes.string,\n  };\n\n  handleLoadMoreAccounts = () => this.props.expandSearch('accounts');\n\n  handleLoadMoreStatuses = () => this.props.expandSearch('statuses');\n\n  handleLoadMoreHashtags = () => this.props.expandSearch('hashtags');\n\n  render () {\n    const { results } = this.props;\n\n    let accounts, statuses, hashtags;\n\n    if (results.get('accounts') && results.get('accounts').size > 0) {\n      accounts = (\n        <SearchSection title={<><Icon id='users' fixedWidth /><FormattedMessage id='search_results.accounts' defaultMessage='Profiles' /></>}>\n          {withoutLastResult(results.get('accounts')).map(accountId => <AccountContainer key={accountId} id={accountId} />)}\n          {(results.get('accounts').size > INITIAL_PAGE_LIMIT && results.get('accounts').size % INITIAL_PAGE_LIMIT === 1) && <LoadMore visible onClick={this.handleLoadMoreAccounts} />}\n        </SearchSection>\n      );\n    }\n\n    if (results.get('hashtags') && results.get('hashtags').size > 0) {\n      hashtags = (\n        <SearchSection title={<><Icon id='hashtag' fixedWidth /><FormattedMessage id='search_results.hashtags' defaultMessage='Hashtags' /></>}>\n          {withoutLastResult(results.get('hashtags')).map(hashtag => <Hashtag key={hashtag.get('name')} hashtag={hashtag} />)}\n          {(results.get('hashtags').size > INITIAL_PAGE_LIMIT && results.get('hashtags').size % INITIAL_PAGE_LIMIT === 1) && <LoadMore visible onClick={this.handleLoadMoreHashtags} />}\n        </SearchSection>\n      );\n    }\n\n    if (results.get('statuses') && results.get('statuses').size > 0) {\n      statuses = (\n        <SearchSection title={<><Icon id='quote-right' fixedWidth /><FormattedMessage id='search_results.statuses' defaultMessage='Posts' /></>}>\n          {withoutLastResult(results.get('statuses')).map(statusId => <StatusContainer key={statusId} id={statusId} />)}\n          {(results.get('statuses').size > INITIAL_PAGE_LIMIT && results.get('statuses').size % INITIAL_PAGE_LIMIT === 1) && <LoadMore visible onClick={this.handleLoadMoreStatuses} />}\n        </SearchSection>\n      );\n    }\n\n\n    return (\n      <div className='search-results'>\n        <div className='search-results__header'>\n          <Icon id='search' fixedWidth />\n          <FormattedMessage id='explore.search_results' defaultMessage='Search results' />\n        </div>\n\n        {accounts}\n        {hashtags}\n        {statuses}\n      </div>\n    );\n  }\n\n}\n\nexport default SearchResults;\n","import { connect } from 'react-redux';\n\nimport { expandSearch } from 'mastodon/actions/search';\nimport { fetchSuggestions, dismissSuggestion } from 'mastodon/actions/suggestions';\n\nimport SearchResults from '../components/search_results';\n\nconst mapStateToProps = state => ({\n  results: state.getIn(['search', 'results']),\n  suggestions: state.getIn(['suggestions', 'items']),\n  searchTerm: state.getIn(['search', 'searchTerm']),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchSuggestions: () => dispatch(fetchSuggestions()),\n  expandSearch: type => dispatch(expandSearch(type)),\n  dismissSuggestion: account => dispatch(dismissSuggestion(account.get('id'))),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SearchResults);\n","import PropTypes from 'prop-types';\nimport { PureComponent } from 'react';\n\nimport { injectIntl, defineMessages } from 'react-intl';\n\nimport { Helmet } from 'react-helmet';\nimport { Link } from 'react-router-dom';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport { connect } from 'react-redux';\n\nimport spring from 'react-motion/lib/spring';\n\nimport { openModal } from 'mastodon/actions/modal';\nimport Column from 'mastodon/components/column';\nimport { Icon }  from 'mastodon/components/icon';\nimport { logOut } from 'mastodon/utils/log_out';\n\nimport elephantUIPlane from '../../../images/elephant_ui_plane.svg';\nimport { changeComposing, mountCompose, unmountCompose } from '../../actions/compose';\nimport { mascot } from '../../initial_state';\nimport { isMobile } from '../../is_mobile';\nimport Motion from '../ui/util/optional_motion';\n\nimport ComposeFormContainer from './containers/compose_form_container';\nimport NavigationContainer from './containers/navigation_container';\nimport SearchContainer from './containers/search_container';\nimport SearchResultsContainer from './containers/search_results_container';\n\nconst messages = defineMessages({\n  start: { id: 'getting_started.heading', defaultMessage: 'Getting started' },\n  home_timeline: { id: 'tabs_bar.home', defaultMessage: 'Home' },\n  notifications: { id: 'tabs_bar.notifications', defaultMessage: 'Notifications' },\n  public: { id: 'navigation_bar.public_timeline', defaultMessage: 'Federated timeline' },\n  community: { id: 'navigation_bar.community_timeline', defaultMessage: 'Local timeline' },\n  preferences: { id: 'navigation_bar.preferences', defaultMessage: 'Preferences' },\n  logout: { id: 'navigation_bar.logout', defaultMessage: 'Logout' },\n  compose: { id: 'navigation_bar.compose', defaultMessage: 'Compose new post' },\n  logoutMessage: { id: 'confirmations.logout.message', defaultMessage: 'Are you sure you want to log out?' },\n  logoutConfirm: { id: 'confirmations.logout.confirm', defaultMessage: 'Log out' },\n});\n\nconst mapStateToProps = (state, ownProps) => ({\n  columns: state.getIn(['settings', 'columns']),\n  showSearch: ownProps.multiColumn ? state.getIn(['search', 'submitted']) && !state.getIn(['search', 'hidden']) : false,\n});\n\nclass Compose extends PureComponent {\n\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    columns: ImmutablePropTypes.list.isRequired,\n    multiColumn: PropTypes.bool,\n    showSearch: PropTypes.bool,\n    intl: PropTypes.object.isRequired,\n  };\n\n  componentDidMount () {\n    const { dispatch } = this.props;\n    dispatch(mountCompose());\n  }\n\n  componentWillUnmount () {\n    const { dispatch } = this.props;\n    dispatch(unmountCompose());\n  }\n\n  handleLogoutClick = e => {\n    const { dispatch, intl } = this.props;\n\n    e.preventDefault();\n    e.stopPropagation();\n\n    dispatch(openModal({\n      modalType: 'CONFIRM',\n      modalProps: {\n        message: intl.formatMessage(messages.logoutMessage),\n        confirm: intl.formatMessage(messages.logoutConfirm),\n        closeWhenConfirm: false,\n        onConfirm: () => logOut(),\n      },\n    }));\n\n    return false;\n  };\n\n  onFocus = () => {\n    this.props.dispatch(changeComposing(true));\n  };\n\n  onBlur = () => {\n    this.props.dispatch(changeComposing(false));\n  };\n\n  render () {\n    const { multiColumn, showSearch, intl } = this.props;\n\n    if (multiColumn) {\n      const { columns } = this.props;\n\n      return (\n        <div className='drawer' role='region' aria-label={intl.formatMessage(messages.compose)}>\n          <nav className='drawer__header'>\n            <Link to='/getting-started' className='drawer__tab' title={intl.formatMessage(messages.start)} aria-label={intl.formatMessage(messages.start)}><Icon id='bars' fixedWidth /></Link>\n            {!columns.some(column => column.get('id') === 'HOME') && (\n              <Link to='/home' className='drawer__tab' title={intl.formatMessage(messages.home_timeline)} aria-label={intl.formatMessage(messages.home_timeline)}><Icon id='home' fixedWidth /></Link>\n            )}\n            {!columns.some(column => column.get('id') === 'NOTIFICATIONS') && (\n              <Link to='/notifications' className='drawer__tab' title={intl.formatMessage(messages.notifications)} aria-label={intl.formatMessage(messages.notifications)}><Icon id='bell' fixedWidth /></Link>\n            )}\n            {!columns.some(column => column.get('id') === 'COMMUNITY') && (\n              <Link to='/public/local' className='drawer__tab' title={intl.formatMessage(messages.community)} aria-label={intl.formatMessage(messages.community)}><Icon id='users' fixedWidth /></Link>\n            )}\n            {!columns.some(column => column.get('id') === 'PUBLIC') && (\n              <Link to='/public' className='drawer__tab' title={intl.formatMessage(messages.public)} aria-label={intl.formatMessage(messages.public)}><Icon id='globe' fixedWidth /></Link>\n            )}\n            <a href='/settings/preferences' className='drawer__tab' title={intl.formatMessage(messages.preferences)} aria-label={intl.formatMessage(messages.preferences)}><Icon id='cog' fixedWidth /></a>\n            <a href='/auth/sign_out' className='drawer__tab' title={intl.formatMessage(messages.logout)} aria-label={intl.formatMessage(messages.logout)} onClick={this.handleLogoutClick}><Icon id='sign-out' fixedWidth /></a>\n          </nav>\n\n          {multiColumn && <SearchContainer /> }\n\n          <div className='drawer__pager'>\n            <div className='drawer__inner' onFocus={this.onFocus}>\n              <NavigationContainer onClose={this.onBlur} />\n\n              <ComposeFormContainer autoFocus={!isMobile(window.innerWidth)} />\n\n              <div className='drawer__inner__mastodon'>\n                <img alt='' draggable='false' src={mascot || elephantUIPlane} />\n              </div>\n            </div>\n\n            <Motion defaultStyle={{ x: -100 }} style={{ x: spring(showSearch ? 0 : -100, { stiffness: 210, damping: 20 }) }}>\n              {({ x }) => (\n                <div className='drawer__inner darker' style={{ transform: `translateX(${x}%)`, visibility: x === -100 ? 'hidden' : 'visible' }}>\n                  <SearchResultsContainer />\n                </div>\n              )}\n            </Motion>\n          </div>\n        </div>\n      );\n    }\n\n    return (\n      <Column onFocus={this.onFocus}>\n        <NavigationContainer onClose={this.onBlur} />\n        <ComposeFormContainer />\n\n        <Helmet>\n          <meta name='robots' content='noindex' />\n        </Helmet>\n      </Column>\n    );\n  }\n\n}\n\nexport default connect(mapStateToProps)(injectIntl(Compose));\n"],"sourceRoot":""}