{"version":3,"sources":["webpack:///./node_modules/@formatjs/intl-pluralrules/index.js","webpack:///./node_modules/@formatjs/intl-pluralrules/abstract/InitializePluralRules.js","webpack:///./node_modules/@formatjs/intl-pluralrules/abstract/ResolvePlural.js","webpack:///./node_modules/@formatjs/intl-pluralrules/abstract/GetOperands.js","webpack:///./node_modules/@formatjs/intl-pluralrules/get_internal_slots.js","webpack:///./node_modules/@formatjs/intl-pluralrules/polyfill-force.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/CanonicalizeLocaleList.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/CanonicalizeTimeZoneName.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/262.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/CoerceOptionsToObject.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/DefaultNumberOption.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/GetNumberOption.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/GetOption.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/GetOptionsObject.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/GetStringOrBooleanOption.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/IsSanctionedSimpleUnitIdentifier.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/IsValidTimeZoneName.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/IsWellFormedCurrencyCode.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/IsWellFormedUnitIdentifier.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/ApplyUnsignedRoundingMode.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/CollapseNumberRange.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/ComputeExponentForMagnitude.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/ToRawPrecision.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/ToRawFixed.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/FormatNumericToString.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/ComputeExponent.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/CurrencyDigits.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/FormatApproximately.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/digit-mapping.generated.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/regex.generated.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/format_to_parts.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/PartitionNumberPattern.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/PartitionNumberRangePattern.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/FormatNumericRange.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/FormatNumericRangeToParts.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/FormatNumericToParts.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/GetUnsignedRoundingMode.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/SetNumberFormatUnitOptions.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/SetNumberFormatDigitOptions.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/NumberFormat/InitializeNumberFormat.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/PartitionPattern.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/SupportedLocales.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/types/date-time.js","webpack:///./node_modules/@formatjs/ecma402-abstract/lib/data.js"],"names":["Object","defineProperty","exports","value","PluralRules","tslib_1","ecma402_abstract_1","InitializePluralRules_1","ResolvePlural_1","get_internal_slots_1","__importDefault","validateInstance","instance","method","TypeError","concat","String","PluralRuleSelect","locale","type","_n","_a","IntegerDigits","NumberOfFractionDigits","FractionDigits","localeData","fn","locales","options","this","constructor","InitializePluralRules","availableLocales","relevantExtensionKeys","getDefaultLocale","getInternalSlots","default","prototype","resolvedOptions","opts","create","internalSlots","forEach","field","val","undefined","pluralCategories","__spreadArray","categories","select","n","ToNumber","ResolvePlural","toString","supportedLocalesOf","SupportedLocales","CanonicalizeLocaleList","__addLocaleData","data","_i","arguments","length","data_1","_b","d","add","__defaultLocale","Set","polyfilled","Symbol","toStringTag","writable","enumerable","configurable","error","ex","intl_localematcher_1","pl","requestedLocales","opt","CoerceOptionsToObject","initializedPluralRules","matcher","GetOption","localeMatcher","SetNumberFormatDigitOptions","r","ResolveLocale","GetOperands_1","invariant","Type","isFinite","s","FormatNumericToString","formattedString","GetOperands","iv","f","v","dp","indexOf","fv","slice","w","t","i","Math","abs","ft","replace","Number","NumberOfFractionDigitsWithoutTrailing","FractionDigitsWithoutTrailing","internalSlotMap","WeakMap","x","get","set","_1","Intl","getCanonicalLocales","CanonicalizeTimeZoneName","tz","tzData","uppercaseLinks","uppercasedTz","toUpperCase","uppercasedZones","keys","reduce","all","z","ianaTimeZone","ToString","o","NaN","TimeClip","time","number","isNaN","SameValue","integer","floor","ToInteger","ToObject","arg","y","is","ArrayCreate","len","Array","HasOwnProperty","prop","hasOwnProperty","call","MS_PER_DAY","mod","Day","WeekDay","DayFromYear","Date","UTC","TimeFromYear","YearFromTime","getUTCFullYear","DaysInYear","DayWithinYear","InLeapYear","MonthFromTime","dwy","leap","Error","DateFromTime","mft","HOURS_PER_DAY","MINUTES_PER_HOUR","SECONDS_PER_MINUTE","MS_PER_SECOND","MS_PER_MINUTE","MS_PER_HOUR","HourFromTime","MinFromTime","SecFromTime","OrdinaryHasInstance","C","O","boundTargetFunction","P","isPrototypeOf","msFromTime","DefaultNumberOption","min","max","fallback","RangeError","GetNumberOption","property","minimum","maximum","values","Boolean","filter","join","GetOptionsObject","GetStringOrBooleanOption","trueValue","falsyValue","SANCTIONED_UNITS","removeUnitNamespace","unit","SIMPLE_UNITS","map","IsSanctionedSimpleUnitIdentifier","unitIdentifier","IsValidTimeZoneName","zoneNames","linkNames","linkName","has","NOT_A_Z_REGEX","IsWellFormedCurrencyCode","currency","_","c","test","IsWellFormedUnitIdentifier","toLowerCase","units","split","numerator","denominator","ApplyUnsignedRoundingMode","r1","r2","unsignedRoundingMode","d1","d2","CollapseNumberRange","result","ComputeExponentForMagnitude","numberFormat","magnitude","notation","dataLocaleData","numberingSystem","compactDisplay","style","currencyDisplay","thresholdMap","numbers","nu","short","decimal","long","num","pow","thresholds","magnitudeKey","other","match","ToRawPrecision","minPrecision","maxPrecision","m","e","xFinal","int","p","xToString","xToStringExponentIndex","xToStringMantissa","xToStringExponent","xToStringMantissaWithoutDecimalPoint","decimalPlaceOffset","round","adjustDecimalPlace","cut","roundedNumber","integerDigitsCount","ToRawFixed","minFraction","maxFraction","mantissa","exponent","k","a","b","intlObject","isNegative","roundingType","minimumSignificantDigits","maximumSignificantDigits","minimumFractionDigits","maximumFractionDigits","string","minInteger","minimumIntegerDigits","ComputeExponent","formatNumberResult","CurrencyDigits","currencyDigitsData","FormatApproximately","approximatelySign","symbols","push","digitMapping","S_UNICODE_REGEX","CARET_S_UNICODE_REGEX","RegExp","source","S_DOLLAR_UNICODE_REGEX","CLDR_NUMBER_PATTERN","formatToParts","numberResult","nonNameCurrencyPart","numberPattern","sign","defaultNumberingSystem","compactNumberPattern","pattern","compactPluralRules","byNumberingSystem","selectPlural","compactPlaralRule","getPatternForSign","getCompactDisplayPattern","byCurrencyDisplay","currencies","symbol","narrow","standard","currencyData","currencySign","percent","decimalNumberPattern","exec","afterCurrency","currencySpacing","afterInsertBetween","beforeCurrency","beforeInsertBetween","numberPatternParts","numberParts","numberPatternParts_1","part","apply","paritionNumberIntoParts","useGrouping","minusSign","plusSign","percentSign","substring","unitPattern","unitName","currencyNameData","displayName","unitPatternParts_1","unitDisplay","unitData","simple","numeratorUnit","denominatorUnit","numeratorUnitPattern","perUnitPattern","perUnit","perPattern","compound","per","denominatorPattern","_c","_d","interpolateMatch","digitReplacementTable","digit","fraction","decimalSepIndex","groupSepSymbol","group","groups","patternGroups","primaryGroupingSize","secondaryGroupingSize","integerGroup","pop","exponential","exponentResult","zeroPattern","negativePattern","rules","PartitionNumberPattern","nan","POSITIVE_INFINITY","NEGATIVE_INFINITY","infinity","signDisplay","PartitionNumberRangePattern","xResult","yResult","xResult_1","rangeSign","yResult_1","FormatNumericRange","FormatNumericRangeToParts","index","FormatNumericToParts","nf","implDetails","parts","parts_1","negativeMapping","ceil","expand","trunc","halfCeil","halfFloor","halfExpand","halfTrunc","halfEven","positiveMapping","GetUnsignedRoundingMode","roundingMode","SetNumberFormatUnitOptions","mnfdDefault","mxfdDefault","mnid","mnfd","mxfd","mnsd","mxsd","roundingPriority","hasSd","hasFd","needSd","needFd","VALID_ROUND_INCREMENT_VALUES","InitializeNumberFormat","numberingSystemNames","dataLocale","cDigits","roundingIncrement","trailingZeroDisplay","defaultUseGrouping","PartitionPattern","beginIndex","endIndex","nextIndex","RangePatternType","_super","MissingLocaleDataError","_this","isMissingLocaleDataError"],"mappings":"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","file":"js/i18n-pluralrules-polyfill-d23f6d93ebb697387666.chunk.js","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.PluralRules = void 0;\nvar tslib_1 = require(\"tslib\");\nvar ecma402_abstract_1 = require(\"@formatjs/ecma402-abstract\");\nvar InitializePluralRules_1 = require(\"./abstract/InitializePluralRules\");\nvar ResolvePlural_1 = require(\"./abstract/ResolvePlural\");\nvar get_internal_slots_1 = tslib_1.__importDefault(require(\"./get_internal_slots\"));\nfunction validateInstance(instance, method) {\n  if (!(instance instanceof PluralRules)) {\n    throw new TypeError(\"Method Intl.PluralRules.prototype.\".concat(method, \" called on incompatible receiver \").concat(String(instance)));\n  }\n}\n/**\n * http://ecma-international.org/ecma-402/7.0/index.html#sec-pluralruleselect\n * @param locale\n * @param type\n * @param _n\n * @param param3\n */\nfunction PluralRuleSelect(locale, type, _n, _a) {\n  var IntegerDigits = _a.IntegerDigits,\n    NumberOfFractionDigits = _a.NumberOfFractionDigits,\n    FractionDigits = _a.FractionDigits;\n  return PluralRules.localeData[locale].fn(NumberOfFractionDigits ? \"\".concat(IntegerDigits, \".\").concat(FractionDigits) : IntegerDigits, type === 'ordinal');\n}\nvar PluralRules = exports.PluralRules = /** @class */function () {\n  function PluralRules(locales, options) {\n    // test262/test/intl402/RelativeTimeFormat/constructor/constructor/newtarget-undefined.js\n    // Cannot use `new.target` bc of IE11 & TS transpiles it to something else\n    var newTarget = this && this instanceof PluralRules ? this.constructor : void 0;\n    if (!newTarget) {\n      throw new TypeError(\"Intl.PluralRules must be called with 'new'\");\n    }\n    return (0, InitializePluralRules_1.InitializePluralRules)(this, locales, options, {\n      availableLocales: PluralRules.availableLocales,\n      relevantExtensionKeys: PluralRules.relevantExtensionKeys,\n      localeData: PluralRules.localeData,\n      getDefaultLocale: PluralRules.getDefaultLocale,\n      getInternalSlots: get_internal_slots_1.default\n    });\n  }\n  PluralRules.prototype.resolvedOptions = function () {\n    validateInstance(this, 'resolvedOptions');\n    var opts = Object.create(null);\n    var internalSlots = (0, get_internal_slots_1.default)(this);\n    opts.locale = internalSlots.locale;\n    opts.type = internalSlots.type;\n    ['minimumIntegerDigits', 'minimumFractionDigits', 'maximumFractionDigits', 'minimumSignificantDigits', 'maximumSignificantDigits'].forEach(function (field) {\n      var val = internalSlots[field];\n      if (val !== undefined) {\n        opts[field] = val;\n      }\n    });\n    opts.pluralCategories = tslib_1.__spreadArray([], PluralRules.localeData[opts.locale].categories[opts.type], true);\n    return opts;\n  };\n  PluralRules.prototype.select = function (val) {\n    var pr = this;\n    validateInstance(pr, 'select');\n    var n = (0, ecma402_abstract_1.ToNumber)(val);\n    return (0, ResolvePlural_1.ResolvePlural)(pr, n, {\n      getInternalSlots: get_internal_slots_1.default,\n      PluralRuleSelect: PluralRuleSelect\n    });\n  };\n  PluralRules.prototype.toString = function () {\n    return '[object Intl.PluralRules]';\n  };\n  PluralRules.supportedLocalesOf = function (locales, options) {\n    return (0, ecma402_abstract_1.SupportedLocales)(PluralRules.availableLocales, (0, ecma402_abstract_1.CanonicalizeLocaleList)(locales), options);\n  };\n  PluralRules.__addLocaleData = function () {\n    var data = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n      data[_i] = arguments[_i];\n    }\n    for (var _a = 0, data_1 = data; _a < data_1.length; _a++) {\n      var _b = data_1[_a],\n        d = _b.data,\n        locale = _b.locale;\n      PluralRules.localeData[locale] = d;\n      PluralRules.availableLocales.add(locale);\n      if (!PluralRules.__defaultLocale) {\n        PluralRules.__defaultLocale = locale;\n      }\n    }\n  };\n  PluralRules.getDefaultLocale = function () {\n    return PluralRules.__defaultLocale;\n  };\n  PluralRules.localeData = {};\n  PluralRules.availableLocales = new Set();\n  PluralRules.__defaultLocale = '';\n  PluralRules.relevantExtensionKeys = [];\n  PluralRules.polyfilled = true;\n  return PluralRules;\n}();\ntry {\n  // IE11 does not have Symbol\n  if (typeof Symbol !== 'undefined') {\n    Object.defineProperty(PluralRules.prototype, Symbol.toStringTag, {\n      value: 'Intl.PluralRules',\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n  }\n  try {\n    // https://github.com/tc39/test262/blob/master/test/intl402/PluralRules/length.js\n    Object.defineProperty(PluralRules, 'length', {\n      value: 0,\n      writable: false,\n      enumerable: false,\n      configurable: true\n    });\n  } catch (error) {\n    // IE 11 sets Function.prototype.length to be non-configurable which will cause the\n    // above Object.defineProperty to throw an error.\n  }\n  // https://github.com/tc39/test262/blob/master/test/intl402/RelativeTimeFormat/constructor/length.js\n  Object.defineProperty(PluralRules.prototype.constructor, 'length', {\n    value: 0,\n    writable: false,\n    enumerable: false,\n    configurable: true\n  });\n  // https://github.com/tc39/test262/blob/master/test/intl402/RelativeTimeFormat/constructor/supportedLocalesOf/length.js\n  Object.defineProperty(PluralRules.supportedLocalesOf, 'length', {\n    value: 1,\n    writable: false,\n    enumerable: false,\n    configurable: true\n  });\n} catch (ex) {\n  // Meta fixes for test262\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.InitializePluralRules = void 0;\nvar ecma402_abstract_1 = require(\"@formatjs/ecma402-abstract\");\nvar intl_localematcher_1 = require(\"@formatjs/intl-localematcher\");\nfunction InitializePluralRules(pl, locales, options, _a) {\n  var availableLocales = _a.availableLocales,\n    relevantExtensionKeys = _a.relevantExtensionKeys,\n    localeData = _a.localeData,\n    getDefaultLocale = _a.getDefaultLocale,\n    getInternalSlots = _a.getInternalSlots;\n  var requestedLocales = (0, ecma402_abstract_1.CanonicalizeLocaleList)(locales);\n  var opt = Object.create(null);\n  var opts = (0, ecma402_abstract_1.CoerceOptionsToObject)(options);\n  var internalSlots = getInternalSlots(pl);\n  internalSlots.initializedPluralRules = true;\n  var matcher = (0, ecma402_abstract_1.GetOption)(opts, 'localeMatcher', 'string', ['best fit', 'lookup'], 'best fit');\n  opt.localeMatcher = matcher;\n  internalSlots.type = (0, ecma402_abstract_1.GetOption)(opts, 'type', 'string', ['cardinal', 'ordinal'], 'cardinal');\n  (0, ecma402_abstract_1.SetNumberFormatDigitOptions)(internalSlots, opts, 0, 3, 'standard');\n  var r = (0, intl_localematcher_1.ResolveLocale)(availableLocales, requestedLocales, opt, relevantExtensionKeys, localeData, getDefaultLocale);\n  internalSlots.locale = r.locale;\n  return pl;\n}\nexports.InitializePluralRules = InitializePluralRules;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ResolvePlural = void 0;\nvar ecma402_abstract_1 = require(\"@formatjs/ecma402-abstract\");\nvar GetOperands_1 = require(\"./GetOperands\");\n/**\n * http://ecma-international.org/ecma-402/7.0/index.html#sec-resolveplural\n * @param pl\n * @param n\n * @param PluralRuleSelect Has to pass in bc it's implementation-specific\n */\nfunction ResolvePlural(pl, n, _a) {\n  var getInternalSlots = _a.getInternalSlots,\n    PluralRuleSelect = _a.PluralRuleSelect;\n  var internalSlots = getInternalSlots(pl);\n  (0, ecma402_abstract_1.invariant)((0, ecma402_abstract_1.Type)(internalSlots) === 'Object', 'pl has to be an object');\n  (0, ecma402_abstract_1.invariant)('initializedPluralRules' in internalSlots, 'pluralrules must be initialized');\n  (0, ecma402_abstract_1.invariant)((0, ecma402_abstract_1.Type)(n) === 'Number', 'n must be a number');\n  if (!isFinite(n)) {\n    return 'other';\n  }\n  var locale = internalSlots.locale,\n    type = internalSlots.type;\n  var res = (0, ecma402_abstract_1.FormatNumericToString)(internalSlots, n);\n  var s = res.formattedString;\n  var operands = (0, GetOperands_1.GetOperands)(s);\n  return PluralRuleSelect(locale, type, n, operands);\n}\nexports.ResolvePlural = ResolvePlural;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GetOperands = void 0;\nvar ecma402_abstract_1 = require(\"@formatjs/ecma402-abstract\");\n/**\n * http://ecma-international.org/ecma-402/7.0/index.html#sec-getoperands\n * @param s\n */\nfunction GetOperands(s) {\n  (0, ecma402_abstract_1.invariant)(typeof s === 'string', \"GetOperands should have been called with a string\");\n  var n = (0, ecma402_abstract_1.ToNumber)(s);\n  (0, ecma402_abstract_1.invariant)(isFinite(n), 'n should be finite');\n  var dp = s.indexOf('.');\n  var iv;\n  var f;\n  var v;\n  var fv = '';\n  if (dp === -1) {\n    iv = n;\n    f = 0;\n    v = 0;\n  } else {\n    iv = s.slice(0, dp);\n    fv = s.slice(dp, s.length);\n    f = (0, ecma402_abstract_1.ToNumber)(fv);\n    v = fv.length;\n  }\n  var i = Math.abs((0, ecma402_abstract_1.ToNumber)(iv));\n  var w;\n  var t;\n  if (f !== 0) {\n    var ft = fv.replace(/0+$/, '');\n    w = ft.length;\n    t = (0, ecma402_abstract_1.ToNumber)(ft);\n  } else {\n    w = 0;\n    t = 0;\n  }\n  return {\n    Number: n,\n    IntegerDigits: i,\n    NumberOfFractionDigits: v,\n    NumberOfFractionDigitsWithoutTrailing: w,\n    FractionDigits: f,\n    FractionDigitsWithoutTrailing: t\n  };\n}\nexports.GetOperands = GetOperands;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar internalSlotMap = new WeakMap();\nfunction getInternalSlots(x) {\n  var internalSlots = internalSlotMap.get(x);\n  if (!internalSlots) {\n    internalSlots = Object.create(null);\n    internalSlotMap.set(x, internalSlots);\n  }\n  return internalSlots;\n}\nexports.default = getInternalSlots;","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _1 = require(\"./\");\nObject.defineProperty(Intl, 'PluralRules', {\n  value: _1.PluralRules,\n  writable: true,\n  enumerable: false,\n  configurable: true\n});","/**\n * http://ecma-international.org/ecma-402/7.0/index.html#sec-canonicalizelocalelist\n * @param locales\n */\nexport function CanonicalizeLocaleList(locales) {\n  // TODO\n  return Intl.getCanonicalLocales(locales);\n}","/**\n * https://tc39.es/ecma402/#sec-canonicalizetimezonename\n * @param tz\n */\nexport function CanonicalizeTimeZoneName(tz, _a) {\n  var tzData = _a.tzData,\n    uppercaseLinks = _a.uppercaseLinks;\n  var uppercasedTz = tz.toUpperCase();\n  var uppercasedZones = Object.keys(tzData).reduce(function (all, z) {\n    all[z.toUpperCase()] = z;\n    return all;\n  }, {});\n  var ianaTimeZone = uppercaseLinks[uppercasedTz] || uppercasedZones[uppercasedTz];\n  if (ianaTimeZone === 'Etc/UTC' || ianaTimeZone === 'Etc/GMT') {\n    return 'UTC';\n  }\n  return ianaTimeZone;\n}","/**\n * https://tc39.es/ecma262/#sec-tostring\n */\nexport function ToString(o) {\n  // Only symbol is irregular...\n  if (typeof o === 'symbol') {\n    throw TypeError('Cannot convert a Symbol value to a string');\n  }\n  return String(o);\n}\n/**\n * https://tc39.es/ecma262/#sec-tonumber\n * @param val\n */\nexport function ToNumber(val) {\n  if (val === undefined) {\n    return NaN;\n  }\n  if (val === null) {\n    return +0;\n  }\n  if (typeof val === 'boolean') {\n    return val ? 1 : +0;\n  }\n  if (typeof val === 'number') {\n    return val;\n  }\n  if (typeof val === 'symbol' || typeof val === 'bigint') {\n    throw new TypeError('Cannot convert symbol/bigint to number');\n  }\n  return Number(val);\n}\n/**\n * https://tc39.es/ecma262/#sec-tointeger\n * @param n\n */\nfunction ToInteger(n) {\n  var number = ToNumber(n);\n  if (isNaN(number) || SameValue(number, -0)) {\n    return 0;\n  }\n  if (isFinite(number)) {\n    return number;\n  }\n  var integer = Math.floor(Math.abs(number));\n  if (number < 0) {\n    integer = -integer;\n  }\n  if (SameValue(integer, -0)) {\n    return 0;\n  }\n  return integer;\n}\n/**\n * https://tc39.es/ecma262/#sec-timeclip\n * @param time\n */\nexport function TimeClip(time) {\n  if (!isFinite(time)) {\n    return NaN;\n  }\n  if (Math.abs(time) > 8.64 * 1e15) {\n    return NaN;\n  }\n  return ToInteger(time);\n}\n/**\n * https://tc39.es/ecma262/#sec-toobject\n * @param arg\n */\nexport function ToObject(arg) {\n  if (arg == null) {\n    throw new TypeError('undefined/null cannot be converted to object');\n  }\n  return Object(arg);\n}\n/**\n * https://www.ecma-international.org/ecma-262/11.0/index.html#sec-samevalue\n * @param x\n * @param y\n */\nexport function SameValue(x, y) {\n  if (Object.is) {\n    return Object.is(x, y);\n  }\n  // SameValue algorithm\n  if (x === y) {\n    // Steps 1-5, 7-10\n    // Steps 6.b-6.e: +0 != -0\n    return x !== 0 || 1 / x === 1 / y;\n  }\n  // Step 6.a: NaN == NaN\n  return x !== x && y !== y;\n}\n/**\n * https://www.ecma-international.org/ecma-262/11.0/index.html#sec-arraycreate\n * @param len\n */\nexport function ArrayCreate(len) {\n  return new Array(len);\n}\n/**\n * https://www.ecma-international.org/ecma-262/11.0/index.html#sec-hasownproperty\n * @param o\n * @param prop\n */\nexport function HasOwnProperty(o, prop) {\n  return Object.prototype.hasOwnProperty.call(o, prop);\n}\n/**\n * https://www.ecma-international.org/ecma-262/11.0/index.html#sec-type\n * @param x\n */\nexport function Type(x) {\n  if (x === null) {\n    return 'Null';\n  }\n  if (typeof x === 'undefined') {\n    return 'Undefined';\n  }\n  if (typeof x === 'function' || typeof x === 'object') {\n    return 'Object';\n  }\n  if (typeof x === 'number') {\n    return 'Number';\n  }\n  if (typeof x === 'boolean') {\n    return 'Boolean';\n  }\n  if (typeof x === 'string') {\n    return 'String';\n  }\n  if (typeof x === 'symbol') {\n    return 'Symbol';\n  }\n  if (typeof x === 'bigint') {\n    return 'BigInt';\n  }\n}\nvar MS_PER_DAY = 86400000;\n/**\n * https://www.ecma-international.org/ecma-262/11.0/index.html#eqn-modulo\n * @param x\n * @param y\n * @return k of the same sign as y\n */\nfunction mod(x, y) {\n  return x - Math.floor(x / y) * y;\n}\n/**\n * https://tc39.es/ecma262/#eqn-Day\n * @param t\n */\nexport function Day(t) {\n  return Math.floor(t / MS_PER_DAY);\n}\n/**\n * https://tc39.es/ecma262/#sec-week-day\n * @param t\n */\nexport function WeekDay(t) {\n  return mod(Day(t) + 4, 7);\n}\n/**\n * https://tc39.es/ecma262/#sec-year-number\n * @param y\n */\nexport function DayFromYear(y) {\n  return Date.UTC(y, 0) / MS_PER_DAY;\n}\n/**\n * https://tc39.es/ecma262/#sec-year-number\n * @param y\n */\nexport function TimeFromYear(y) {\n  return Date.UTC(y, 0);\n}\n/**\n * https://tc39.es/ecma262/#sec-year-number\n * @param t\n */\nexport function YearFromTime(t) {\n  return new Date(t).getUTCFullYear();\n}\nexport function DaysInYear(y) {\n  if (y % 4 !== 0) {\n    return 365;\n  }\n  if (y % 100 !== 0) {\n    return 366;\n  }\n  if (y % 400 !== 0) {\n    return 365;\n  }\n  return 366;\n}\nexport function DayWithinYear(t) {\n  return Day(t) - DayFromYear(YearFromTime(t));\n}\nexport function InLeapYear(t) {\n  return DaysInYear(YearFromTime(t)) === 365 ? 0 : 1;\n}\n/**\n * https://tc39.es/ecma262/#sec-month-number\n * @param t\n */\nexport function MonthFromTime(t) {\n  var dwy = DayWithinYear(t);\n  var leap = InLeapYear(t);\n  if (dwy >= 0 && dwy < 31) {\n    return 0;\n  }\n  if (dwy < 59 + leap) {\n    return 1;\n  }\n  if (dwy < 90 + leap) {\n    return 2;\n  }\n  if (dwy < 120 + leap) {\n    return 3;\n  }\n  if (dwy < 151 + leap) {\n    return 4;\n  }\n  if (dwy < 181 + leap) {\n    return 5;\n  }\n  if (dwy < 212 + leap) {\n    return 6;\n  }\n  if (dwy < 243 + leap) {\n    return 7;\n  }\n  if (dwy < 273 + leap) {\n    return 8;\n  }\n  if (dwy < 304 + leap) {\n    return 9;\n  }\n  if (dwy < 334 + leap) {\n    return 10;\n  }\n  if (dwy < 365 + leap) {\n    return 11;\n  }\n  throw new Error('Invalid time');\n}\nexport function DateFromTime(t) {\n  var dwy = DayWithinYear(t);\n  var mft = MonthFromTime(t);\n  var leap = InLeapYear(t);\n  if (mft === 0) {\n    return dwy + 1;\n  }\n  if (mft === 1) {\n    return dwy - 30;\n  }\n  if (mft === 2) {\n    return dwy - 58 - leap;\n  }\n  if (mft === 3) {\n    return dwy - 89 - leap;\n  }\n  if (mft === 4) {\n    return dwy - 119 - leap;\n  }\n  if (mft === 5) {\n    return dwy - 150 - leap;\n  }\n  if (mft === 6) {\n    return dwy - 180 - leap;\n  }\n  if (mft === 7) {\n    return dwy - 211 - leap;\n  }\n  if (mft === 8) {\n    return dwy - 242 - leap;\n  }\n  if (mft === 9) {\n    return dwy - 272 - leap;\n  }\n  if (mft === 10) {\n    return dwy - 303 - leap;\n  }\n  if (mft === 11) {\n    return dwy - 333 - leap;\n  }\n  throw new Error('Invalid time');\n}\nvar HOURS_PER_DAY = 24;\nvar MINUTES_PER_HOUR = 60;\nvar SECONDS_PER_MINUTE = 60;\nvar MS_PER_SECOND = 1e3;\nvar MS_PER_MINUTE = MS_PER_SECOND * SECONDS_PER_MINUTE;\nvar MS_PER_HOUR = MS_PER_MINUTE * MINUTES_PER_HOUR;\nexport function HourFromTime(t) {\n  return mod(Math.floor(t / MS_PER_HOUR), HOURS_PER_DAY);\n}\nexport function MinFromTime(t) {\n  return mod(Math.floor(t / MS_PER_MINUTE), MINUTES_PER_HOUR);\n}\nexport function SecFromTime(t) {\n  return mod(Math.floor(t / MS_PER_SECOND), SECONDS_PER_MINUTE);\n}\nfunction IsCallable(fn) {\n  return typeof fn === 'function';\n}\n/**\n * The abstract operation OrdinaryHasInstance implements\n * the default algorithm for determining if an object O\n * inherits from the instance object inheritance path\n * provided by constructor C.\n * @param C class\n * @param O object\n * @param internalSlots internalSlots\n */\nexport function OrdinaryHasInstance(C, O, internalSlots) {\n  if (!IsCallable(C)) {\n    return false;\n  }\n  if (internalSlots === null || internalSlots === void 0 ? void 0 : internalSlots.boundTargetFunction) {\n    var BC = internalSlots === null || internalSlots === void 0 ? void 0 : internalSlots.boundTargetFunction;\n    return O instanceof BC;\n  }\n  if (typeof O !== 'object') {\n    return false;\n  }\n  var P = C.prototype;\n  if (typeof P !== 'object') {\n    throw new TypeError('OrdinaryHasInstance called on an object with an invalid prototype property.');\n  }\n  return Object.prototype.isPrototypeOf.call(P, O);\n}\nexport function msFromTime(t) {\n  return mod(t, MS_PER_SECOND);\n}","import { ToObject } from './262';\n/**\n * https://tc39.es/ecma402/#sec-coerceoptionstoobject\n * @param options\n * @returns\n */\nexport function CoerceOptionsToObject(options) {\n  if (typeof options === 'undefined') {\n    return Object.create(null);\n  }\n  return ToObject(options);\n}","export function DefaultNumberOption(val, min, max, fallback) {\n  if (val !== undefined) {\n    val = Number(val);\n    if (isNaN(val) || val < min || val > max) {\n      throw new RangeError(\"\".concat(val, \" is outside of range [\").concat(min, \", \").concat(max, \"]\"));\n    }\n    return Math.floor(val);\n  }\n  return fallback;\n}","/**\n * https://tc39.es/ecma402/#sec-getnumberoption\n * @param options\n * @param property\n * @param min\n * @param max\n * @param fallback\n */\nimport { DefaultNumberOption } from './DefaultNumberOption';\nexport function GetNumberOption(options, property, minimum, maximum, fallback) {\n  var val = options[property];\n  // @ts-expect-error\n  return DefaultNumberOption(val, minimum, maximum, fallback);\n}","import { ToString } from './262';\n/**\n * https://tc39.es/ecma402/#sec-getoption\n * @param opts\n * @param prop\n * @param type\n * @param values\n * @param fallback\n */\nexport function GetOption(opts, prop, type, values, fallback) {\n  if (typeof opts !== 'object') {\n    throw new TypeError('Options must be an object');\n  }\n  var value = opts[prop];\n  if (value !== undefined) {\n    if (type !== 'boolean' && type !== 'string') {\n      throw new TypeError('invalid type');\n    }\n    if (type === 'boolean') {\n      value = Boolean(value);\n    }\n    if (type === 'string') {\n      value = ToString(value);\n    }\n    if (values !== undefined && !values.filter(function (val) {\n      return val == value;\n    }).length) {\n      throw new RangeError(\"\".concat(value, \" is not within \").concat(values.join(', ')));\n    }\n    return value;\n  }\n  return fallback;\n}","/**\n * https://tc39.es/ecma402/#sec-getoptionsobject\n * @param options\n * @returns\n */\nexport function GetOptionsObject(options) {\n  if (typeof options === 'undefined') {\n    return Object.create(null);\n  }\n  if (typeof options === 'object') {\n    return options;\n  }\n  throw new TypeError('Options must be an object');\n}","/**\n * https://tc39.es/ecma402/#sec-getstringorbooleanoption\n * @param opts\n * @param prop\n * @param values\n * @param trueValue\n * @param falsyValue\n * @param fallback\n */\nimport { ToString } from './262';\nexport function GetStringOrBooleanOption(opts, prop, values, trueValue, falsyValue, fallback) {\n  var value = opts[prop];\n  if (value === undefined) {\n    return fallback;\n  }\n  if (value === true) {\n    return trueValue;\n  }\n  var valueBoolean = Boolean(value);\n  if (valueBoolean === false) {\n    return falsyValue;\n  }\n  value = ToString(value);\n  if (value === 'true' || value === 'false') {\n    return fallback;\n  }\n  if ((values || []).indexOf(value) === -1) {\n    throw new RangeError(\"Invalid value \".concat(value));\n  }\n  return value;\n}","/**\n * https://tc39.es/ecma402/#table-sanctioned-simple-unit-identifiers\n */\nexport var SANCTIONED_UNITS = ['angle-degree', 'area-acre', 'area-hectare', 'concentr-percent', 'digital-bit', 'digital-byte', 'digital-gigabit', 'digital-gigabyte', 'digital-kilobit', 'digital-kilobyte', 'digital-megabit', 'digital-megabyte', 'digital-petabyte', 'digital-terabit', 'digital-terabyte', 'duration-day', 'duration-hour', 'duration-millisecond', 'duration-minute', 'duration-month', 'duration-second', 'duration-week', 'duration-year', 'length-centimeter', 'length-foot', 'length-inch', 'length-kilometer', 'length-meter', 'length-mile-scandinavian', 'length-mile', 'length-millimeter', 'length-yard', 'mass-gram', 'mass-kilogram', 'mass-ounce', 'mass-pound', 'mass-stone', 'temperature-celsius', 'temperature-fahrenheit', 'volume-fluid-ounce', 'volume-gallon', 'volume-liter', 'volume-milliliter'];\n// In CLDR, the unit name always follows the form `namespace-unit` pattern.\n// For example: `digital-bit` instead of `bit`. This function removes the namespace prefix.\nexport function removeUnitNamespace(unit) {\n  return unit.slice(unit.indexOf('-') + 1);\n}\n/**\n * https://tc39.es/ecma402/#table-sanctioned-simple-unit-identifiers\n */\nexport var SIMPLE_UNITS = SANCTIONED_UNITS.map(removeUnitNamespace);\n/**\n * https://tc39.es/ecma402/#sec-issanctionedsimpleunitidentifier\n */\nexport function IsSanctionedSimpleUnitIdentifier(unitIdentifier) {\n  return SIMPLE_UNITS.indexOf(unitIdentifier) > -1;\n}","/**\n * https://tc39.es/ecma402/#sec-isvalidtimezonename\n * @param tz\n * @param implDetails implementation details\n */\nexport function IsValidTimeZoneName(tz, _a) {\n  var tzData = _a.tzData,\n    uppercaseLinks = _a.uppercaseLinks;\n  var uppercasedTz = tz.toUpperCase();\n  var zoneNames = new Set();\n  var linkNames = new Set();\n  Object.keys(tzData).map(function (z) {\n    return z.toUpperCase();\n  }).forEach(function (z) {\n    return zoneNames.add(z);\n  });\n  Object.keys(uppercaseLinks).forEach(function (linkName) {\n    linkNames.add(linkName.toUpperCase());\n    zoneNames.add(uppercaseLinks[linkName].toUpperCase());\n  });\n  return zoneNames.has(uppercasedTz) || linkNames.has(uppercasedTz);\n}","/**\n * This follows https://tc39.es/ecma402/#sec-case-sensitivity-and-case-mapping\n * @param str string to convert\n */\nfunction toUpperCase(str) {\n  return str.replace(/([a-z])/g, function (_, c) {\n    return c.toUpperCase();\n  });\n}\nvar NOT_A_Z_REGEX = /[^A-Z]/;\n/**\n * https://tc39.es/ecma402/#sec-iswellformedcurrencycode\n */\nexport function IsWellFormedCurrencyCode(currency) {\n  currency = toUpperCase(currency);\n  if (currency.length !== 3) {\n    return false;\n  }\n  if (NOT_A_Z_REGEX.test(currency)) {\n    return false;\n  }\n  return true;\n}","import { IsSanctionedSimpleUnitIdentifier } from './IsSanctionedSimpleUnitIdentifier';\n/**\n * This follows https://tc39.es/ecma402/#sec-case-sensitivity-and-case-mapping\n * @param str string to convert\n */\nfunction toLowerCase(str) {\n  return str.replace(/([A-Z])/g, function (_, c) {\n    return c.toLowerCase();\n  });\n}\n/**\n * https://tc39.es/ecma402/#sec-iswellformedunitidentifier\n * @param unit\n */\nexport function IsWellFormedUnitIdentifier(unit) {\n  unit = toLowerCase(unit);\n  if (IsSanctionedSimpleUnitIdentifier(unit)) {\n    return true;\n  }\n  var units = unit.split('-per-');\n  if (units.length !== 2) {\n    return false;\n  }\n  var numerator = units[0],\n    denominator = units[1];\n  if (!IsSanctionedSimpleUnitIdentifier(numerator) || !IsSanctionedSimpleUnitIdentifier(denominator)) {\n    return false;\n  }\n  return true;\n}","export function ApplyUnsignedRoundingMode(x, r1, r2, unsignedRoundingMode) {\n  if (x === r1) return r1;\n  if (unsignedRoundingMode === undefined) {\n    throw new Error('unsignedRoundingMode is mandatory');\n  }\n  if (unsignedRoundingMode === 'zero') {\n    return r1;\n  }\n  if (unsignedRoundingMode === 'infinity') {\n    return r2;\n  }\n  var d1 = x - r1;\n  var d2 = r2 - x;\n  if (d1 < d2) {\n    return r1;\n  }\n  if (d2 < d1) {\n    return r2;\n  }\n  if (d1 !== d2) {\n    throw new Error('Unexpected error');\n  }\n  if (unsignedRoundingMode === 'half-zero') {\n    return r1;\n  }\n  if (unsignedRoundingMode === 'half-infinity') {\n    return r2;\n  }\n  if (unsignedRoundingMode !== 'half-even') {\n    throw new Error(\"Unexpected value for unsignedRoundingMode: \".concat(unsignedRoundingMode));\n  }\n  var cardinality = r1 / (r2 - r1) % 2;\n  if (cardinality === 0) {\n    return r1;\n  }\n  return r2;\n}","/**\n * https://tc39.es/ecma402/#sec-collapsenumberrange\n */\nexport function CollapseNumberRange(result) {\n  return result;\n}","/**\n * The abstract operation ComputeExponentForMagnitude computes an exponent by which to scale a\n * number of the given magnitude (power of ten of the most significant digit) according to the\n * locale and the desired notation (scientific, engineering, or compact).\n */\nexport function ComputeExponentForMagnitude(numberFormat, magnitude, _a) {\n  var getInternalSlots = _a.getInternalSlots;\n  var internalSlots = getInternalSlots(numberFormat);\n  var notation = internalSlots.notation,\n    dataLocaleData = internalSlots.dataLocaleData,\n    numberingSystem = internalSlots.numberingSystem;\n  switch (notation) {\n    case 'standard':\n      return 0;\n    case 'scientific':\n      return magnitude;\n    case 'engineering':\n      return Math.floor(magnitude / 3) * 3;\n    default:\n      {\n        // Let exponent be an implementation- and locale-dependent (ILD) integer by which to scale a\n        // number of the given magnitude in compact notation for the current locale.\n        var compactDisplay = internalSlots.compactDisplay,\n          style = internalSlots.style,\n          currencyDisplay = internalSlots.currencyDisplay;\n        var thresholdMap = void 0;\n        if (style === 'currency' && currencyDisplay !== 'name') {\n          var currency = dataLocaleData.numbers.currency[numberingSystem] || dataLocaleData.numbers.currency[dataLocaleData.numbers.nu[0]];\n          thresholdMap = currency.short;\n        } else {\n          var decimal = dataLocaleData.numbers.decimal[numberingSystem] || dataLocaleData.numbers.decimal[dataLocaleData.numbers.nu[0]];\n          thresholdMap = compactDisplay === 'long' ? decimal.long : decimal.short;\n        }\n        if (!thresholdMap) {\n          return 0;\n        }\n        var num = String(Math.pow(10, magnitude));\n        var thresholds = Object.keys(thresholdMap); // TODO: this can be pre-processed\n        if (num < thresholds[0]) {\n          return 0;\n        }\n        if (num > thresholds[thresholds.length - 1]) {\n          return thresholds[thresholds.length - 1].length - 1;\n        }\n        var i = thresholds.indexOf(num);\n        if (i === -1) {\n          return 0;\n        }\n        // See https://unicode.org/reports/tr35/tr35-numbers.html#Compact_Number_Formats\n        // Special handling if the pattern is precisely `0`.\n        var magnitudeKey = thresholds[i];\n        // TODO: do we need to handle plural here?\n        var compactPattern = thresholdMap[magnitudeKey].other;\n        if (compactPattern === '0') {\n          return 0;\n        }\n        // Example: in zh-TW, `10000000` maps to `0000萬`. So we need to return 8 - 4 = 4 here.\n        return magnitudeKey.length - thresholdMap[magnitudeKey].other.match(/0+/)[0].length;\n      }\n  }\n}","import { repeat, getMagnitude } from '../utils';\nexport function ToRawPrecision(x, minPrecision, maxPrecision) {\n  var p = maxPrecision;\n  var m;\n  var e;\n  var xFinal;\n  if (x === 0) {\n    m = repeat('0', p);\n    e = 0;\n    xFinal = 0;\n  } else {\n    var xToString = x.toString();\n    // If xToString is formatted as scientific notation, the number is either very small or very\n    // large. If the precision of the formatted string is lower that requested max precision, we\n    // should still infer them from the formatted string, otherwise the formatted result might have\n    // precision loss (e.g. 1e41 will not have 0 in every trailing digits).\n    var xToStringExponentIndex = xToString.indexOf('e');\n    var _a = xToString.split('e'),\n      xToStringMantissa = _a[0],\n      xToStringExponent = _a[1];\n    var xToStringMantissaWithoutDecimalPoint = xToStringMantissa.replace('.', '');\n    if (xToStringExponentIndex >= 0 && xToStringMantissaWithoutDecimalPoint.length <= p) {\n      e = +xToStringExponent;\n      m = xToStringMantissaWithoutDecimalPoint + repeat('0', p - xToStringMantissaWithoutDecimalPoint.length);\n      xFinal = x;\n    } else {\n      e = getMagnitude(x);\n      var decimalPlaceOffset = e - p + 1;\n      // n is the integer containing the required precision digits. To derive the formatted string,\n      // we will adjust its decimal place in the logic below.\n      var n = Math.round(adjustDecimalPlace(x, decimalPlaceOffset));\n      // The rounding caused the change of magnitude, so we should increment `e` by 1.\n      if (adjustDecimalPlace(n, p - 1) >= 10) {\n        e = e + 1;\n        // Divide n by 10 to swallow one precision.\n        n = Math.floor(n / 10);\n      }\n      m = n.toString();\n      // Equivalent of n * 10 ** (e - p + 1)\n      xFinal = adjustDecimalPlace(n, p - 1 - e);\n    }\n  }\n  var int;\n  if (e >= p - 1) {\n    m = m + repeat('0', e - p + 1);\n    int = e + 1;\n  } else if (e >= 0) {\n    m = \"\".concat(m.slice(0, e + 1), \".\").concat(m.slice(e + 1));\n    int = e + 1;\n  } else {\n    m = \"0.\".concat(repeat('0', -e - 1)).concat(m);\n    int = 1;\n  }\n  if (m.indexOf('.') >= 0 && maxPrecision > minPrecision) {\n    var cut = maxPrecision - minPrecision;\n    while (cut > 0 && m[m.length - 1] === '0') {\n      m = m.slice(0, -1);\n      cut--;\n    }\n    if (m[m.length - 1] === '.') {\n      m = m.slice(0, -1);\n    }\n  }\n  return {\n    formattedString: m,\n    roundedNumber: xFinal,\n    integerDigitsCount: int\n  };\n  // x / (10 ** magnitude), but try to preserve as much floating point precision as possible.\n  function adjustDecimalPlace(x, magnitude) {\n    return magnitude < 0 ? x * Math.pow(10, -magnitude) : x / Math.pow(10, magnitude);\n  }\n}","import { repeat } from '../utils';\n/**\n * TODO: dedup with intl-pluralrules and support BigInt\n * https://tc39.es/ecma402/#sec-torawfixed\n * @param x a finite non-negative Number or BigInt\n * @param minFraction and integer between 0 and 20\n * @param maxFraction and integer between 0 and 20\n */\nexport function ToRawFixed(x, minFraction, maxFraction) {\n  var f = maxFraction;\n  var n = Math.round(x * Math.pow(10, f));\n  var xFinal = n / Math.pow(10, f);\n  // n is a positive integer, but it is possible to be greater than 1e21.\n  // In such case we will go the slow path.\n  // See also: https://tc39.es/ecma262/#sec-numeric-types-number-tostring\n  var m;\n  if (n < 1e21) {\n    m = n.toString();\n  } else {\n    m = n.toString();\n    var _a = m.split('e'),\n      mantissa = _a[0],\n      exponent = _a[1];\n    m = mantissa.replace('.', '');\n    m = m + repeat('0', Math.max(+exponent - m.length + 1, 0));\n  }\n  var int;\n  if (f !== 0) {\n    var k = m.length;\n    if (k <= f) {\n      var z = repeat('0', f + 1 - k);\n      m = z + m;\n      k = f + 1;\n    }\n    var a = m.slice(0, k - f);\n    var b = m.slice(k - f);\n    m = \"\".concat(a, \".\").concat(b);\n    int = a.length;\n  } else {\n    int = m.length;\n  }\n  var cut = maxFraction - minFraction;\n  while (cut > 0 && m[m.length - 1] === '0') {\n    m = m.slice(0, -1);\n    cut--;\n  }\n  if (m[m.length - 1] === '.') {\n    m = m.slice(0, -1);\n  }\n  return {\n    formattedString: m,\n    roundedNumber: xFinal,\n    integerDigitsCount: int\n  };\n}","import { SameValue } from '../262';\nimport { ToRawPrecision } from './ToRawPrecision';\nimport { repeat } from '../utils';\nimport { ToRawFixed } from './ToRawFixed';\n/**\n * https://tc39.es/ecma402/#sec-formatnumberstring\n */\nexport function FormatNumericToString(intlObject, x) {\n  var isNegative = x < 0 || SameValue(x, -0);\n  if (isNegative) {\n    x = -x;\n  }\n  var result;\n  var rourndingType = intlObject.roundingType;\n  switch (rourndingType) {\n    case 'significantDigits':\n      result = ToRawPrecision(x, intlObject.minimumSignificantDigits, intlObject.maximumSignificantDigits);\n      break;\n    case 'fractionDigits':\n      result = ToRawFixed(x, intlObject.minimumFractionDigits, intlObject.maximumFractionDigits);\n      break;\n    default:\n      result = ToRawPrecision(x, 1, 2);\n      if (result.integerDigitsCount > 1) {\n        result = ToRawFixed(x, 0, 0);\n      }\n      break;\n  }\n  x = result.roundedNumber;\n  var string = result.formattedString;\n  var int = result.integerDigitsCount;\n  var minInteger = intlObject.minimumIntegerDigits;\n  if (int < minInteger) {\n    var forwardZeros = repeat('0', minInteger - int);\n    string = forwardZeros + string;\n  }\n  if (isNegative) {\n    x = -x;\n  }\n  return {\n    roundedNumber: x,\n    formattedString: string\n  };\n}","import { getMagnitude } from '../utils';\nimport { ComputeExponentForMagnitude } from './ComputeExponentForMagnitude';\nimport { FormatNumericToString } from './FormatNumericToString';\n/**\n * The abstract operation ComputeExponent computes an exponent (power of ten) by which to scale x\n * according to the number formatting settings. It handles cases such as 999 rounding up to 1000,\n * requiring a different exponent.\n *\n * NOT IN SPEC: it returns [exponent, magnitude].\n */\nexport function ComputeExponent(numberFormat, x, _a) {\n  var getInternalSlots = _a.getInternalSlots;\n  if (x === 0) {\n    return [0, 0];\n  }\n  if (x < 0) {\n    x = -x;\n  }\n  var magnitude = getMagnitude(x);\n  var exponent = ComputeExponentForMagnitude(numberFormat, magnitude, {\n    getInternalSlots: getInternalSlots\n  });\n  // Preserve more precision by doing multiplication when exponent is negative.\n  x = exponent < 0 ? x * Math.pow(10, -exponent) : x / Math.pow(10, exponent);\n  var formatNumberResult = FormatNumericToString(getInternalSlots(numberFormat), x);\n  if (formatNumberResult.roundedNumber === 0) {\n    return [exponent, magnitude];\n  }\n  var newMagnitude = getMagnitude(formatNumberResult.roundedNumber);\n  if (newMagnitude === magnitude - exponent) {\n    return [exponent, magnitude];\n  }\n  return [ComputeExponentForMagnitude(numberFormat, magnitude + 1, {\n    getInternalSlots: getInternalSlots\n  }), magnitude + 1];\n}","import { HasOwnProperty } from '../262';\n/**\n * https://tc39.es/ecma402/#sec-currencydigits\n */\nexport function CurrencyDigits(c, _a) {\n  var currencyDigitsData = _a.currencyDigitsData;\n  return HasOwnProperty(currencyDigitsData, c) ? currencyDigitsData[c] : 2;\n}","/**\n * https://tc39.es/ecma402/#sec-formatapproximately\n */\nexport function FormatApproximately(numberFormat, result, _a) {\n  var getInternalSlots = _a.getInternalSlots;\n  var internalSlots = getInternalSlots(numberFormat);\n  var symbols = internalSlots.dataLocaleData.numbers.symbols[internalSlots.numberingSystem];\n  var approximatelySign = symbols.approximatelySign;\n  result.push({\n    type: 'approximatelySign',\n    value: approximatelySign\n  });\n  return result;\n}","export var digitMapping = {\n  \"adlm\": [\"𞥐\", \"𞥑\", \"𞥒\", \"𞥓\", \"𞥔\", \"𞥕\", \"𞥖\", \"𞥗\", \"𞥘\", \"𞥙\"],\n  \"ahom\": [\"𑜰\", \"𑜱\", \"𑜲\", \"𑜳\", \"𑜴\", \"𑜵\", \"𑜶\", \"𑜷\", \"𑜸\", \"𑜹\"],\n  \"arab\": [\"٠\", \"١\", \"٢\", \"٣\", \"٤\", \"٥\", \"٦\", \"٧\", \"٨\", \"٩\"],\n  \"arabext\": [\"۰\", \"۱\", \"۲\", \"۳\", \"۴\", \"۵\", \"۶\", \"۷\", \"۸\", \"۹\"],\n  \"bali\": [\"᭐\", \"᭑\", \"᭒\", \"᭓\", \"᭔\", \"᭕\", \"᭖\", \"᭗\", \"᭘\", \"᭙\"],\n  \"beng\": [\"০\", \"১\", \"২\", \"৩\", \"৪\", \"৫\", \"৬\", \"৭\", \"৮\", \"৯\"],\n  \"bhks\": [\"𑱐\", \"𑱑\", \"𑱒\", \"𑱓\", \"𑱔\", \"𑱕\", \"𑱖\", \"𑱗\", \"𑱘\", \"𑱙\"],\n  \"brah\": [\"𑁦\", \"𑁧\", \"𑁨\", \"𑁩\", \"𑁪\", \"𑁫\", \"𑁬\", \"𑁭\", \"𑁮\", \"𑁯\"],\n  \"cakm\": [\"𑄶\", \"𑄷\", \"𑄸\", \"𑄹\", \"𑄺\", \"𑄻\", \"𑄼\", \"𑄽\", \"𑄾\", \"𑄿\"],\n  \"cham\": [\"꩐\", \"꩑\", \"꩒\", \"꩓\", \"꩔\", \"꩕\", \"꩖\", \"꩗\", \"꩘\", \"꩙\"],\n  \"deva\": [\"०\", \"१\", \"२\", \"३\", \"४\", \"५\", \"६\", \"७\", \"८\", \"९\"],\n  \"diak\": [\"𑥐\", \"𑥑\", \"𑥒\", \"𑥓\", \"𑥔\", \"𑥕\", \"𑥖\", \"𑥗\", \"𑥘\", \"𑥙\"],\n  \"fullwide\": [\"０\", \"１\", \"２\", \"３\", \"４\", \"５\", \"６\", \"７\", \"８\", \"９\"],\n  \"gong\": [\"𑶠\", \"𑶡\", \"𑶢\", \"𑶣\", \"𑶤\", \"𑶥\", \"𑶦\", \"𑶧\", \"𑶨\", \"𑶩\"],\n  \"gonm\": [\"𑵐\", \"𑵑\", \"𑵒\", \"𑵓\", \"𑵔\", \"𑵕\", \"𑵖\", \"𑵗\", \"𑵘\", \"𑵙\"],\n  \"gujr\": [\"૦\", \"૧\", \"૨\", \"૩\", \"૪\", \"૫\", \"૬\", \"૭\", \"૮\", \"૯\"],\n  \"guru\": [\"੦\", \"੧\", \"੨\", \"੩\", \"੪\", \"੫\", \"੬\", \"੭\", \"੮\", \"੯\"],\n  \"hanidec\": [\"〇\", \"一\", \"二\", \"三\", \"四\", \"五\", \"六\", \"七\", \"八\", \"九\"],\n  \"hmng\": [\"𖭐\", \"𖭑\", \"𖭒\", \"𖭓\", \"𖭔\", \"𖭕\", \"𖭖\", \"𖭗\", \"𖭘\", \"𖭙\"],\n  \"hmnp\": [\"𞅀\", \"𞅁\", \"𞅂\", \"𞅃\", \"𞅄\", \"𞅅\", \"𞅆\", \"𞅇\", \"𞅈\", \"𞅉\"],\n  \"java\": [\"꧐\", \"꧑\", \"꧒\", \"꧓\", \"꧔\", \"꧕\", \"꧖\", \"꧗\", \"꧘\", \"꧙\"],\n  \"kali\": [\"꤀\", \"꤁\", \"꤂\", \"꤃\", \"꤄\", \"꤅\", \"꤆\", \"꤇\", \"꤈\", \"꤉\"],\n  \"khmr\": [\"០\", \"១\", \"២\", \"៣\", \"៤\", \"៥\", \"៦\", \"៧\", \"៨\", \"៩\"],\n  \"knda\": [\"೦\", \"೧\", \"೨\", \"೩\", \"೪\", \"೫\", \"೬\", \"೭\", \"೮\", \"೯\"],\n  \"lana\": [\"᪀\", \"᪁\", \"᪂\", \"᪃\", \"᪄\", \"᪅\", \"᪆\", \"᪇\", \"᪈\", \"᪉\"],\n  \"lanatham\": [\"᪐\", \"᪑\", \"᪒\", \"᪓\", \"᪔\", \"᪕\", \"᪖\", \"᪗\", \"᪘\", \"᪙\"],\n  \"laoo\": [\"໐\", \"໑\", \"໒\", \"໓\", \"໔\", \"໕\", \"໖\", \"໗\", \"໘\", \"໙\"],\n  \"lepc\": [\"᪐\", \"᪑\", \"᪒\", \"᪓\", \"᪔\", \"᪕\", \"᪖\", \"᪗\", \"᪘\", \"᪙\"],\n  \"limb\": [\"᥆\", \"᥇\", \"᥈\", \"᥉\", \"᥊\", \"᥋\", \"᥌\", \"᥍\", \"᥎\", \"᥏\"],\n  \"mathbold\": [\"𝟎\", \"𝟏\", \"𝟐\", \"𝟑\", \"𝟒\", \"𝟓\", \"𝟔\", \"𝟕\", \"𝟖\", \"𝟗\"],\n  \"mathdbl\": [\"𝟘\", \"𝟙\", \"𝟚\", \"𝟛\", \"𝟜\", \"𝟝\", \"𝟞\", \"𝟟\", \"𝟠\", \"𝟡\"],\n  \"mathmono\": [\"𝟶\", \"𝟷\", \"𝟸\", \"𝟹\", \"𝟺\", \"𝟻\", \"𝟼\", \"𝟽\", \"𝟾\", \"𝟿\"],\n  \"mathsanb\": [\"𝟬\", \"𝟭\", \"𝟮\", \"𝟯\", \"𝟰\", \"𝟱\", \"𝟲\", \"𝟳\", \"𝟴\", \"𝟵\"],\n  \"mathsans\": [\"𝟢\", \"𝟣\", \"𝟤\", \"𝟥\", \"𝟦\", \"𝟧\", \"𝟨\", \"𝟩\", \"𝟪\", \"𝟫\"],\n  \"mlym\": [\"൦\", \"൧\", \"൨\", \"൩\", \"൪\", \"൫\", \"൬\", \"൭\", \"൮\", \"൯\"],\n  \"modi\": [\"𑙐\", \"𑙑\", \"𑙒\", \"𑙓\", \"𑙔\", \"𑙕\", \"𑙖\", \"𑙗\", \"𑙘\", \"𑙙\"],\n  \"mong\": [\"᠐\", \"᠑\", \"᠒\", \"᠓\", \"᠔\", \"᠕\", \"᠖\", \"᠗\", \"᠘\", \"᠙\"],\n  \"mroo\": [\"𖩠\", \"𖩡\", \"𖩢\", \"𖩣\", \"𖩤\", \"𖩥\", \"𖩦\", \"𖩧\", \"𖩨\", \"𖩩\"],\n  \"mtei\": [\"꯰\", \"꯱\", \"꯲\", \"꯳\", \"꯴\", \"꯵\", \"꯶\", \"꯷\", \"꯸\", \"꯹\"],\n  \"mymr\": [\"၀\", \"၁\", \"၂\", \"၃\", \"၄\", \"၅\", \"၆\", \"၇\", \"၈\", \"၉\"],\n  \"mymrshan\": [\"႐\", \"႑\", \"႒\", \"႓\", \"႔\", \"႕\", \"႖\", \"႗\", \"႘\", \"႙\"],\n  \"mymrtlng\": [\"꧰\", \"꧱\", \"꧲\", \"꧳\", \"꧴\", \"꧵\", \"꧶\", \"꧷\", \"꧸\", \"꧹\"],\n  \"newa\": [\"𑑐\", \"𑑑\", \"𑑒\", \"𑑓\", \"𑑔\", \"𑑕\", \"𑑖\", \"𑑗\", \"𑑘\", \"𑑙\"],\n  \"nkoo\": [\"߀\", \"߁\", \"߂\", \"߃\", \"߄\", \"߅\", \"߆\", \"߇\", \"߈\", \"߉\"],\n  \"olck\": [\"᱐\", \"᱑\", \"᱒\", \"᱓\", \"᱔\", \"᱕\", \"᱖\", \"᱗\", \"᱘\", \"᱙\"],\n  \"orya\": [\"୦\", \"୧\", \"୨\", \"୩\", \"୪\", \"୫\", \"୬\", \"୭\", \"୮\", \"୯\"],\n  \"osma\": [\"𐒠\", \"𐒡\", \"𐒢\", \"𐒣\", \"𐒤\", \"𐒥\", \"𐒦\", \"𐒧\", \"𐒨\", \"𐒩\"],\n  \"rohg\": [\"𐴰\", \"𐴱\", \"𐴲\", \"𐴳\", \"𐴴\", \"𐴵\", \"𐴶\", \"𐴷\", \"𐴸\", \"𐴹\"],\n  \"saur\": [\"꣐\", \"꣑\", \"꣒\", \"꣓\", \"꣔\", \"꣕\", \"꣖\", \"꣗\", \"꣘\", \"꣙\"],\n  \"segment\": [\"🯰\", \"🯱\", \"🯲\", \"🯳\", \"🯴\", \"🯵\", \"🯶\", \"🯷\", \"🯸\", \"🯹\"],\n  \"shrd\": [\"𑇐\", \"𑇑\", \"𑇒\", \"𑇓\", \"𑇔\", \"𑇕\", \"𑇖\", \"𑇗\", \"𑇘\", \"𑇙\"],\n  \"sind\": [\"𑋰\", \"𑋱\", \"𑋲\", \"𑋳\", \"𑋴\", \"𑋵\", \"𑋶\", \"𑋷\", \"𑋸\", \"𑋹\"],\n  \"sinh\": [\"෦\", \"෧\", \"෨\", \"෩\", \"෪\", \"෫\", \"෬\", \"෭\", \"෮\", \"෯\"],\n  \"sora\": [\"𑃰\", \"𑃱\", \"𑃲\", \"𑃳\", \"𑃴\", \"𑃵\", \"𑃶\", \"𑃷\", \"𑃸\", \"𑃹\"],\n  \"sund\": [\"᮰\", \"᮱\", \"᮲\", \"᮳\", \"᮴\", \"᮵\", \"᮶\", \"᮷\", \"᮸\", \"᮹\"],\n  \"takr\": [\"𑛀\", \"𑛁\", \"𑛂\", \"𑛃\", \"𑛄\", \"𑛅\", \"𑛆\", \"𑛇\", \"𑛈\", \"𑛉\"],\n  \"talu\": [\"᧐\", \"᧑\", \"᧒\", \"᧓\", \"᧔\", \"᧕\", \"᧖\", \"᧗\", \"᧘\", \"᧙\"],\n  \"tamldec\": [\"௦\", \"௧\", \"௨\", \"௩\", \"௪\", \"௫\", \"௬\", \"௭\", \"௮\", \"௯\"],\n  \"telu\": [\"౦\", \"౧\", \"౨\", \"౩\", \"౪\", \"౫\", \"౬\", \"౭\", \"౮\", \"౯\"],\n  \"thai\": [\"๐\", \"๑\", \"๒\", \"๓\", \"๔\", \"๕\", \"๖\", \"๗\", \"๘\", \"๙\"],\n  \"tibt\": [\"༠\", \"༡\", \"༢\", \"༣\", \"༤\", \"༥\", \"༦\", \"༧\", \"༨\", \"༩\"],\n  \"tirh\": [\"𑓐\", \"𑓑\", \"𑓒\", \"𑓓\", \"𑓔\", \"𑓕\", \"𑓖\", \"𑓗\", \"𑓘\", \"𑓙\"],\n  \"vaii\": [\"ᘠ\", \"ᘡ\", \"ᘢ\", \"ᘣ\", \"ᘤ\", \"ᘥ\", \"ᘦ\", \"ᘧ\", \"ᘨ\", \"ᘩ\"],\n  \"wara\": [\"𑣠\", \"𑣡\", \"𑣢\", \"𑣣\", \"𑣤\", \"𑣥\", \"𑣦\", \"𑣧\", \"𑣨\", \"𑣩\"],\n  \"wcho\": [\"𞋰\", \"𞋱\", \"𞋲\", \"𞋳\", \"𞋴\", \"𞋵\", \"𞋶\", \"𞋷\", \"𞋸\", \"𞋹\"]\n};","// @generated from regex-gen.ts\nexport var S_UNICODE_REGEX = /[\\$\\+<->\\^`\\|~\\xA2-\\xA6\\xA8\\xA9\\xAC\\xAE-\\xB1\\xB4\\xB8\\xD7\\xF7\\u02C2-\\u02C5\\u02D2-\\u02DF\\u02E5-\\u02EB\\u02ED\\u02EF-\\u02FF\\u0375\\u0384\\u0385\\u03F6\\u0482\\u058D-\\u058F\\u0606-\\u0608\\u060B\\u060E\\u060F\\u06DE\\u06E9\\u06FD\\u06FE\\u07F6\\u07FE\\u07FF\\u09F2\\u09F3\\u09FA\\u09FB\\u0AF1\\u0B70\\u0BF3-\\u0BFA\\u0C7F\\u0D4F\\u0D79\\u0E3F\\u0F01-\\u0F03\\u0F13\\u0F15-\\u0F17\\u0F1A-\\u0F1F\\u0F34\\u0F36\\u0F38\\u0FBE-\\u0FC5\\u0FC7-\\u0FCC\\u0FCE\\u0FCF\\u0FD5-\\u0FD8\\u109E\\u109F\\u1390-\\u1399\\u166D\\u17DB\\u1940\\u19DE-\\u19FF\\u1B61-\\u1B6A\\u1B74-\\u1B7C\\u1FBD\\u1FBF-\\u1FC1\\u1FCD-\\u1FCF\\u1FDD-\\u1FDF\\u1FED-\\u1FEF\\u1FFD\\u1FFE\\u2044\\u2052\\u207A-\\u207C\\u208A-\\u208C\\u20A0-\\u20BF\\u2100\\u2101\\u2103-\\u2106\\u2108\\u2109\\u2114\\u2116-\\u2118\\u211E-\\u2123\\u2125\\u2127\\u2129\\u212E\\u213A\\u213B\\u2140-\\u2144\\u214A-\\u214D\\u214F\\u218A\\u218B\\u2190-\\u2307\\u230C-\\u2328\\u232B-\\u2426\\u2440-\\u244A\\u249C-\\u24E9\\u2500-\\u2767\\u2794-\\u27C4\\u27C7-\\u27E5\\u27F0-\\u2982\\u2999-\\u29D7\\u29DC-\\u29FB\\u29FE-\\u2B73\\u2B76-\\u2B95\\u2B97-\\u2BFF\\u2CE5-\\u2CEA\\u2E50\\u2E51\\u2E80-\\u2E99\\u2E9B-\\u2EF3\\u2F00-\\u2FD5\\u2FF0-\\u2FFB\\u3004\\u3012\\u3013\\u3020\\u3036\\u3037\\u303E\\u303F\\u309B\\u309C\\u3190\\u3191\\u3196-\\u319F\\u31C0-\\u31E3\\u3200-\\u321E\\u322A-\\u3247\\u3250\\u3260-\\u327F\\u328A-\\u32B0\\u32C0-\\u33FF\\u4DC0-\\u4DFF\\uA490-\\uA4C6\\uA700-\\uA716\\uA720\\uA721\\uA789\\uA78A\\uA828-\\uA82B\\uA836-\\uA839\\uAA77-\\uAA79\\uAB5B\\uAB6A\\uAB6B\\uFB29\\uFBB2-\\uFBC1\\uFDFC\\uFDFD\\uFE62\\uFE64-\\uFE66\\uFE69\\uFF04\\uFF0B\\uFF1C-\\uFF1E\\uFF3E\\uFF40\\uFF5C\\uFF5E\\uFFE0-\\uFFE6\\uFFE8-\\uFFEE\\uFFFC\\uFFFD]|\\uD800[\\uDD37-\\uDD3F\\uDD79-\\uDD89\\uDD8C-\\uDD8E\\uDD90-\\uDD9C\\uDDA0\\uDDD0-\\uDDFC]|\\uD802[\\uDC77\\uDC78\\uDEC8]|\\uD805\\uDF3F|\\uD807[\\uDFD5-\\uDFF1]|\\uD81A[\\uDF3C-\\uDF3F\\uDF45]|\\uD82F\\uDC9C|\\uD834[\\uDC00-\\uDCF5\\uDD00-\\uDD26\\uDD29-\\uDD64\\uDD6A-\\uDD6C\\uDD83\\uDD84\\uDD8C-\\uDDA9\\uDDAE-\\uDDE8\\uDE00-\\uDE41\\uDE45\\uDF00-\\uDF56]|\\uD835[\\uDEC1\\uDEDB\\uDEFB\\uDF15\\uDF35\\uDF4F\\uDF6F\\uDF89\\uDFA9\\uDFC3]|\\uD836[\\uDC00-\\uDDFF\\uDE37-\\uDE3A\\uDE6D-\\uDE74\\uDE76-\\uDE83\\uDE85\\uDE86]|\\uD838[\\uDD4F\\uDEFF]|\\uD83B[\\uDCAC\\uDCB0\\uDD2E\\uDEF0\\uDEF1]|\\uD83C[\\uDC00-\\uDC2B\\uDC30-\\uDC93\\uDCA0-\\uDCAE\\uDCB1-\\uDCBF\\uDCC1-\\uDCCF\\uDCD1-\\uDCF5\\uDD0D-\\uDDAD\\uDDE6-\\uDE02\\uDE10-\\uDE3B\\uDE40-\\uDE48\\uDE50\\uDE51\\uDE60-\\uDE65\\uDF00-\\uDFFF]|\\uD83D[\\uDC00-\\uDED7\\uDEE0-\\uDEEC\\uDEF0-\\uDEFC\\uDF00-\\uDF73\\uDF80-\\uDFD8\\uDFE0-\\uDFEB]|\\uD83E[\\uDC00-\\uDC0B\\uDC10-\\uDC47\\uDC50-\\uDC59\\uDC60-\\uDC87\\uDC90-\\uDCAD\\uDCB0\\uDCB1\\uDD00-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDE53\\uDE60-\\uDE6D\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6\\uDF00-\\uDF92\\uDF94-\\uDFCA]/;","import { ToRawFixed } from './ToRawFixed';\nimport { digitMapping } from './digit-mapping.generated';\nimport { S_UNICODE_REGEX } from '../regex.generated';\n// This is from: unicode-12.1.0/General_Category/Symbol/regex.js\n// IE11 does not support unicode flag, otherwise this is just /\\p{S}/u.\n// /^\\p{S}/u\nvar CARET_S_UNICODE_REGEX = new RegExp(\"^\".concat(S_UNICODE_REGEX.source));\n// /\\p{S}$/u\nvar S_DOLLAR_UNICODE_REGEX = new RegExp(\"\".concat(S_UNICODE_REGEX.source, \"$\"));\nvar CLDR_NUMBER_PATTERN = /[#0](?:[\\.,][#0]+)*/g;\nexport default function formatToParts(numberResult, data, pl, options) {\n  var sign = numberResult.sign,\n    exponent = numberResult.exponent,\n    magnitude = numberResult.magnitude;\n  var notation = options.notation,\n    style = options.style,\n    numberingSystem = options.numberingSystem;\n  var defaultNumberingSystem = data.numbers.nu[0];\n  // #region Part 1: partition and interpolate the CLDR number pattern.\n  // ----------------------------------------------------------\n  var compactNumberPattern = null;\n  if (notation === 'compact' && magnitude) {\n    compactNumberPattern = getCompactDisplayPattern(numberResult, pl, data, style, options.compactDisplay, options.currencyDisplay, numberingSystem);\n  }\n  // This is used multiple times\n  var nonNameCurrencyPart;\n  if (style === 'currency' && options.currencyDisplay !== 'name') {\n    var byCurrencyDisplay = data.currencies[options.currency];\n    if (byCurrencyDisplay) {\n      switch (options.currencyDisplay) {\n        case 'code':\n          nonNameCurrencyPart = options.currency;\n          break;\n        case 'symbol':\n          nonNameCurrencyPart = byCurrencyDisplay.symbol;\n          break;\n        default:\n          nonNameCurrencyPart = byCurrencyDisplay.narrow;\n          break;\n      }\n    } else {\n      // Fallback for unknown currency\n      nonNameCurrencyPart = options.currency;\n    }\n  }\n  var numberPattern;\n  if (!compactNumberPattern) {\n    // Note: if the style is unit, or is currency and the currency display is name,\n    // its unit parts will be interpolated in part 2. So here we can fallback to decimal.\n    if (style === 'decimal' || style === 'unit' || style === 'currency' && options.currencyDisplay === 'name') {\n      // Shortcut for decimal\n      var decimalData = data.numbers.decimal[numberingSystem] || data.numbers.decimal[defaultNumberingSystem];\n      numberPattern = getPatternForSign(decimalData.standard, sign);\n    } else if (style === 'currency') {\n      var currencyData = data.numbers.currency[numberingSystem] || data.numbers.currency[defaultNumberingSystem];\n      // We replace number pattern part with `0` for easier postprocessing.\n      numberPattern = getPatternForSign(currencyData[options.currencySign], sign);\n    } else {\n      // percent\n      var percentPattern = data.numbers.percent[numberingSystem] || data.numbers.percent[defaultNumberingSystem];\n      numberPattern = getPatternForSign(percentPattern, sign);\n    }\n  } else {\n    numberPattern = compactNumberPattern;\n  }\n  // Extract the decimal number pattern string. It looks like \"#,##0,00\", which will later be\n  // used to infer decimal group sizes.\n  var decimalNumberPattern = CLDR_NUMBER_PATTERN.exec(numberPattern)[0];\n  // Now we start to substitute patterns\n  // 1. replace strings like `0` and `#,##0.00` with `{0}`\n  // 2. unquote characters (invariant: the quoted characters does not contain the special tokens)\n  numberPattern = numberPattern.replace(CLDR_NUMBER_PATTERN, '{0}').replace(/'(.)'/g, '$1');\n  // Handle currency spacing (both compact and non-compact).\n  if (style === 'currency' && options.currencyDisplay !== 'name') {\n    var currencyData = data.numbers.currency[numberingSystem] || data.numbers.currency[defaultNumberingSystem];\n    // See `currencySpacing` substitution rule in TR-35.\n    // Here we always assume the currencyMatch is \"[:^S:]\" and surroundingMatch is \"[:digit:]\".\n    //\n    // Example 1: for pattern \"#,##0.00¤\" with symbol \"US$\", we replace \"¤\" with the symbol,\n    // but insert an extra non-break space before the symbol, because \"[:^S:]\" matches \"U\" in\n    // \"US$\" and \"[:digit:]\" matches the latn numbering system digits.\n    //\n    // Example 2: for pattern \"¤#,##0.00\" with symbol \"US$\", there is no spacing between symbol\n    // and number, because `$` does not match \"[:^S:]\".\n    //\n    // Implementation note: here we do the best effort to infer the insertion.\n    // We also assume that `beforeInsertBetween` and `afterInsertBetween` will never be `;`.\n    var afterCurrency = currencyData.currencySpacing.afterInsertBetween;\n    if (afterCurrency && !S_DOLLAR_UNICODE_REGEX.test(nonNameCurrencyPart)) {\n      numberPattern = numberPattern.replace('¤{0}', \"\\u00A4\".concat(afterCurrency, \"{0}\"));\n    }\n    var beforeCurrency = currencyData.currencySpacing.beforeInsertBetween;\n    if (beforeCurrency && !CARET_S_UNICODE_REGEX.test(nonNameCurrencyPart)) {\n      numberPattern = numberPattern.replace('{0}¤', \"{0}\".concat(beforeCurrency, \"\\u00A4\"));\n    }\n  }\n  // The following tokens are special: `{0}`, `¤`, `%`, `-`, `+`, `{c:...}.\n  var numberPatternParts = numberPattern.split(/({c:[^}]+}|\\{0\\}|[¤%\\-\\+])/g);\n  var numberParts = [];\n  var symbols = data.numbers.symbols[numberingSystem] || data.numbers.symbols[defaultNumberingSystem];\n  for (var _i = 0, numberPatternParts_1 = numberPatternParts; _i < numberPatternParts_1.length; _i++) {\n    var part = numberPatternParts_1[_i];\n    if (!part) {\n      continue;\n    }\n    switch (part) {\n      case '{0}':\n        {\n          // We only need to handle scientific and engineering notation here.\n          numberParts.push.apply(numberParts, paritionNumberIntoParts(symbols, numberResult, notation, exponent, numberingSystem,\n          // If compact number pattern exists, do not insert group separators.\n          !compactNumberPattern && Boolean(options.useGrouping), decimalNumberPattern));\n          break;\n        }\n      case '-':\n        numberParts.push({\n          type: 'minusSign',\n          value: symbols.minusSign\n        });\n        break;\n      case '+':\n        numberParts.push({\n          type: 'plusSign',\n          value: symbols.plusSign\n        });\n        break;\n      case '%':\n        numberParts.push({\n          type: 'percentSign',\n          value: symbols.percentSign\n        });\n        break;\n      case '¤':\n        // Computed above when handling currency spacing.\n        numberParts.push({\n          type: 'currency',\n          value: nonNameCurrencyPart\n        });\n        break;\n      default:\n        if (/^\\{c:/.test(part)) {\n          numberParts.push({\n            type: 'compact',\n            value: part.substring(3, part.length - 1)\n          });\n        } else {\n          // literal\n          numberParts.push({\n            type: 'literal',\n            value: part\n          });\n        }\n        break;\n    }\n  }\n  // #endregion\n  // #region Part 2: interpolate unit pattern if necessary.\n  // ----------------------------------------------\n  switch (style) {\n    case 'currency':\n      {\n        // `currencyDisplay: 'name'` has similar pattern handling as units.\n        if (options.currencyDisplay === 'name') {\n          var unitPattern = (data.numbers.currency[numberingSystem] || data.numbers.currency[defaultNumberingSystem]).unitPattern;\n          // Select plural\n          var unitName = void 0;\n          var currencyNameData = data.currencies[options.currency];\n          if (currencyNameData) {\n            unitName = selectPlural(pl, numberResult.roundedNumber * Math.pow(10, exponent), currencyNameData.displayName);\n          } else {\n            // Fallback for unknown currency\n            unitName = options.currency;\n          }\n          // Do {0} and {1} substitution\n          var unitPatternParts = unitPattern.split(/(\\{[01]\\})/g);\n          var result = [];\n          for (var _a = 0, unitPatternParts_1 = unitPatternParts; _a < unitPatternParts_1.length; _a++) {\n            var part = unitPatternParts_1[_a];\n            switch (part) {\n              case '{0}':\n                result.push.apply(result, numberParts);\n                break;\n              case '{1}':\n                result.push({\n                  type: 'currency',\n                  value: unitName\n                });\n                break;\n              default:\n                if (part) {\n                  result.push({\n                    type: 'literal',\n                    value: part\n                  });\n                }\n                break;\n            }\n          }\n          return result;\n        } else {\n          return numberParts;\n        }\n      }\n    case 'unit':\n      {\n        var unit = options.unit,\n          unitDisplay = options.unitDisplay;\n        var unitData = data.units.simple[unit];\n        var unitPattern = void 0;\n        if (unitData) {\n          // Simple unit pattern\n          unitPattern = selectPlural(pl, numberResult.roundedNumber * Math.pow(10, exponent), data.units.simple[unit][unitDisplay]);\n        } else {\n          // See: http://unicode.org/reports/tr35/tr35-general.html#perUnitPatterns\n          // If cannot find unit in the simple pattern, it must be \"per\" compound pattern.\n          // Implementation note: we are not following TR-35 here because we need to format to parts!\n          var _b = unit.split('-per-'),\n            numeratorUnit = _b[0],\n            denominatorUnit = _b[1];\n          unitData = data.units.simple[numeratorUnit];\n          var numeratorUnitPattern = selectPlural(pl, numberResult.roundedNumber * Math.pow(10, exponent), data.units.simple[numeratorUnit][unitDisplay]);\n          var perUnitPattern = data.units.simple[denominatorUnit].perUnit[unitDisplay];\n          if (perUnitPattern) {\n            // perUnitPattern exists, combine it with numeratorUnitPattern\n            unitPattern = perUnitPattern.replace('{0}', numeratorUnitPattern);\n          } else {\n            // get compoundUnit pattern (e.g. \"{0} per {1}\"), repalce {0} with numerator pattern and {1} with\n            // the denominator pattern in singular form.\n            var perPattern = data.units.compound.per[unitDisplay];\n            var denominatorPattern = selectPlural(pl, 1, data.units.simple[denominatorUnit][unitDisplay]);\n            unitPattern = unitPattern = perPattern.replace('{0}', numeratorUnitPattern).replace('{1}', denominatorPattern.replace('{0}', ''));\n          }\n        }\n        var result = [];\n        // We need spacing around \"{0}\" because they are not treated as \"unit\" parts, but \"literal\".\n        for (var _c = 0, _d = unitPattern.split(/(\\s*\\{0\\}\\s*)/); _c < _d.length; _c++) {\n          var part = _d[_c];\n          var interpolateMatch = /^(\\s*)\\{0\\}(\\s*)$/.exec(part);\n          if (interpolateMatch) {\n            // Space before \"{0}\"\n            if (interpolateMatch[1]) {\n              result.push({\n                type: 'literal',\n                value: interpolateMatch[1]\n              });\n            }\n            // \"{0}\" itself\n            result.push.apply(result, numberParts);\n            // Space after \"{0}\"\n            if (interpolateMatch[2]) {\n              result.push({\n                type: 'literal',\n                value: interpolateMatch[2]\n              });\n            }\n          } else if (part) {\n            result.push({\n              type: 'unit',\n              value: part\n            });\n          }\n        }\n        return result;\n      }\n    default:\n      return numberParts;\n  }\n  // #endregion\n}\n// A subset of https://tc39.es/ecma402/#sec-partitionnotationsubpattern\n// Plus the exponent parts handling.\nfunction paritionNumberIntoParts(symbols, numberResult, notation, exponent, numberingSystem, useGrouping,\n/**\n * This is the decimal number pattern without signs or symbols.\n * It is used to infer the group size when `useGrouping` is true.\n *\n * A typical value looks like \"#,##0.00\" (primary group size is 3).\n * Some locales like Hindi has secondary group size of 2 (e.g. \"#,##,##0.00\").\n */\ndecimalNumberPattern) {\n  var result = [];\n  // eslint-disable-next-line prefer-const\n  var n = numberResult.formattedString,\n    x = numberResult.roundedNumber;\n  if (isNaN(x)) {\n    return [{\n      type: 'nan',\n      value: n\n    }];\n  } else if (!isFinite(x)) {\n    return [{\n      type: 'infinity',\n      value: n\n    }];\n  }\n  var digitReplacementTable = digitMapping[numberingSystem];\n  if (digitReplacementTable) {\n    n = n.replace(/\\d/g, function (digit) {\n      return digitReplacementTable[+digit] || digit;\n    });\n  }\n  // TODO: Else use an implementation dependent algorithm to map n to the appropriate\n  // representation of n in the given numbering system.\n  var decimalSepIndex = n.indexOf('.');\n  var integer;\n  var fraction;\n  if (decimalSepIndex > 0) {\n    integer = n.slice(0, decimalSepIndex);\n    fraction = n.slice(decimalSepIndex + 1);\n  } else {\n    integer = n;\n  }\n  // #region Grouping integer digits\n  // The weird compact and x >= 10000 check is to ensure consistency with Node.js and Chrome.\n  // Note that `de` does not have compact form for thousands, but Node.js does not insert grouping separator\n  // unless the rounded number is greater than 10000:\n  //   NumberFormat('de', {notation: 'compact', compactDisplay: 'short'}).format(1234) //=> \"1234\"\n  //   NumberFormat('de').format(1234) //=> \"1.234\"\n  if (useGrouping && (notation !== 'compact' || x >= 10000)) {\n    var groupSepSymbol = symbols.group;\n    var groups = [];\n    // > There may be two different grouping sizes: The primary grouping size used for the least\n    // > significant integer group, and the secondary grouping size used for more significant groups.\n    // > If a pattern contains multiple grouping separators, the interval between the last one and the\n    // > end of the integer defines the primary grouping size, and the interval between the last two\n    // > defines the secondary grouping size. All others are ignored.\n    var integerNumberPattern = decimalNumberPattern.split('.')[0];\n    var patternGroups = integerNumberPattern.split(',');\n    var primaryGroupingSize = 3;\n    var secondaryGroupingSize = 3;\n    if (patternGroups.length > 1) {\n      primaryGroupingSize = patternGroups[patternGroups.length - 1].length;\n    }\n    if (patternGroups.length > 2) {\n      secondaryGroupingSize = patternGroups[patternGroups.length - 2].length;\n    }\n    var i = integer.length - primaryGroupingSize;\n    if (i > 0) {\n      // Slice the least significant integer group\n      groups.push(integer.slice(i, i + primaryGroupingSize));\n      // Then iteratively push the more signicant groups\n      // TODO: handle surrogate pairs in some numbering system digits\n      for (i -= secondaryGroupingSize; i > 0; i -= secondaryGroupingSize) {\n        groups.push(integer.slice(i, i + secondaryGroupingSize));\n      }\n      groups.push(integer.slice(0, i + secondaryGroupingSize));\n    } else {\n      groups.push(integer);\n    }\n    while (groups.length > 0) {\n      var integerGroup = groups.pop();\n      result.push({\n        type: 'integer',\n        value: integerGroup\n      });\n      if (groups.length > 0) {\n        result.push({\n          type: 'group',\n          value: groupSepSymbol\n        });\n      }\n    }\n  } else {\n    result.push({\n      type: 'integer',\n      value: integer\n    });\n  }\n  // #endregion\n  if (fraction !== undefined) {\n    result.push({\n      type: 'decimal',\n      value: symbols.decimal\n    }, {\n      type: 'fraction',\n      value: fraction\n    });\n  }\n  if ((notation === 'scientific' || notation === 'engineering') && isFinite(x)) {\n    result.push({\n      type: 'exponentSeparator',\n      value: symbols.exponential\n    });\n    if (exponent < 0) {\n      result.push({\n        type: 'exponentMinusSign',\n        value: symbols.minusSign\n      });\n      exponent = -exponent;\n    }\n    var exponentResult = ToRawFixed(exponent, 0, 0);\n    result.push({\n      type: 'exponentInteger',\n      value: exponentResult.formattedString\n    });\n  }\n  return result;\n}\nfunction getPatternForSign(pattern, sign) {\n  if (pattern.indexOf(';') < 0) {\n    pattern = \"\".concat(pattern, \";-\").concat(pattern);\n  }\n  var _a = pattern.split(';'),\n    zeroPattern = _a[0],\n    negativePattern = _a[1];\n  switch (sign) {\n    case 0:\n      return zeroPattern;\n    case -1:\n      return negativePattern;\n    default:\n      return negativePattern.indexOf('-') >= 0 ? negativePattern.replace(/-/g, '+') : \"+\".concat(zeroPattern);\n  }\n}\n// Find the CLDR pattern for compact notation based on the magnitude of data and style.\n//\n// Example return value: \"¤ {c:laki}000;¤{c:laki} -0\" (`sw` locale):\n// - Notice the `{c:...}` token that wraps the compact literal.\n// - The consecutive zeros are normalized to single zero to match CLDR_NUMBER_PATTERN.\n//\n// Returning null means the compact display pattern cannot be found.\nfunction getCompactDisplayPattern(numberResult, pl, data, style, compactDisplay, currencyDisplay, numberingSystem) {\n  var _a;\n  var roundedNumber = numberResult.roundedNumber,\n    sign = numberResult.sign,\n    magnitude = numberResult.magnitude;\n  var magnitudeKey = String(Math.pow(10, magnitude));\n  var defaultNumberingSystem = data.numbers.nu[0];\n  var pattern;\n  if (style === 'currency' && currencyDisplay !== 'name') {\n    var byNumberingSystem = data.numbers.currency;\n    var currencyData = byNumberingSystem[numberingSystem] || byNumberingSystem[defaultNumberingSystem];\n    // NOTE: compact notation ignores currencySign!\n    var compactPluralRules = (_a = currencyData.short) === null || _a === void 0 ? void 0 : _a[magnitudeKey];\n    if (!compactPluralRules) {\n      return null;\n    }\n    pattern = selectPlural(pl, roundedNumber, compactPluralRules);\n  } else {\n    var byNumberingSystem = data.numbers.decimal;\n    var byCompactDisplay = byNumberingSystem[numberingSystem] || byNumberingSystem[defaultNumberingSystem];\n    var compactPlaralRule = byCompactDisplay[compactDisplay][magnitudeKey];\n    if (!compactPlaralRule) {\n      return null;\n    }\n    pattern = selectPlural(pl, roundedNumber, compactPlaralRule);\n  }\n  // See https://unicode.org/reports/tr35/tr35-numbers.html#Compact_Number_Formats\n  // > If the value is precisely “0”, either explicit or defaulted, then the normal number format\n  // > pattern for that sort of object is supplied.\n  if (pattern === '0') {\n    return null;\n  }\n  pattern = getPatternForSign(pattern, sign)\n  // Extract compact literal from the pattern\n  .replace(/([^\\s;\\-\\+\\d¤]+)/g, '{c:$1}')\n  // We replace one or more zeros with a single zero so it matches `CLDR_NUMBER_PATTERN`.\n  .replace(/0+/, '0');\n  return pattern;\n}\nfunction selectPlural(pl, x, rules) {\n  return rules[pl.select(x)] || rules.other;\n}","import { FormatNumericToString } from './FormatNumericToString';\nimport { SameValue } from '../262';\nimport { ComputeExponent } from './ComputeExponent';\nimport formatToParts from './format_to_parts';\n/**\n * https://tc39.es/ecma402/#sec-formatnumberstring\n */\nexport function PartitionNumberPattern(numberFormat, x, _a) {\n  var _b;\n  var getInternalSlots = _a.getInternalSlots;\n  var internalSlots = getInternalSlots(numberFormat);\n  var pl = internalSlots.pl,\n    dataLocaleData = internalSlots.dataLocaleData,\n    numberingSystem = internalSlots.numberingSystem;\n  var symbols = dataLocaleData.numbers.symbols[numberingSystem] || dataLocaleData.numbers.symbols[dataLocaleData.numbers.nu[0]];\n  var magnitude = 0;\n  var exponent = 0;\n  var n;\n  if (isNaN(x)) {\n    n = symbols.nan;\n  } else if (x == Number.POSITIVE_INFINITY || x == Number.NEGATIVE_INFINITY) {\n    n = symbols.infinity;\n  } else {\n    if (!SameValue(x, -0)) {\n      if (!isFinite(x)) {\n        throw new Error('Input must be a mathematical value');\n      }\n      if (internalSlots.style == 'percent') {\n        x *= 100;\n      }\n      ;\n      _b = ComputeExponent(numberFormat, x, {\n        getInternalSlots: getInternalSlots\n      }), exponent = _b[0], magnitude = _b[1];\n      // Preserve more precision by doing multiplication when exponent is negative.\n      x = exponent < 0 ? x * Math.pow(10, -exponent) : x / Math.pow(10, exponent);\n    }\n    var formatNumberResult = FormatNumericToString(internalSlots, x);\n    n = formatNumberResult.formattedString;\n    x = formatNumberResult.roundedNumber;\n  }\n  // Based on https://tc39.es/ecma402/#sec-getnumberformatpattern\n  // We need to do this before `x` is rounded.\n  var sign;\n  var signDisplay = internalSlots.signDisplay;\n  switch (signDisplay) {\n    case 'never':\n      sign = 0;\n      break;\n    case 'auto':\n      if (SameValue(x, 0) || x > 0 || isNaN(x)) {\n        sign = 0;\n      } else {\n        sign = -1;\n      }\n      break;\n    case 'always':\n      if (SameValue(x, 0) || x > 0 || isNaN(x)) {\n        sign = 1;\n      } else {\n        sign = -1;\n      }\n      break;\n    default:\n      // x === 0 -> x is 0 or x is -0\n      if (x === 0 || isNaN(x)) {\n        sign = 0;\n      } else if (x > 0) {\n        sign = 1;\n      } else {\n        sign = -1;\n      }\n  }\n  return formatToParts({\n    roundedNumber: x,\n    formattedString: n,\n    exponent: exponent,\n    magnitude: magnitude,\n    sign: sign\n  }, internalSlots.dataLocaleData, pl, internalSlots);\n}","import { PartitionNumberPattern } from './PartitionNumberPattern';\nimport { CollapseNumberRange } from './CollapseNumberRange';\nimport { FormatApproximately } from './FormatApproximately';\n/**\n * https://tc39.es/ecma402/#sec-partitionnumberrangepattern\n */\nexport function PartitionNumberRangePattern(numberFormat, x, y, _a) {\n  var getInternalSlots = _a.getInternalSlots;\n  if (isNaN(x) || isNaN(y)) {\n    throw new RangeError('Input must be a number');\n  }\n  var result = [];\n  var xResult = PartitionNumberPattern(numberFormat, x, {\n    getInternalSlots: getInternalSlots\n  });\n  var yResult = PartitionNumberPattern(numberFormat, y, {\n    getInternalSlots: getInternalSlots\n  });\n  if (xResult === yResult) {\n    return FormatApproximately(numberFormat, xResult, {\n      getInternalSlots: getInternalSlots\n    });\n  }\n  for (var _i = 0, xResult_1 = xResult; _i < xResult_1.length; _i++) {\n    var r = xResult_1[_i];\n    r.source = 'startRange';\n  }\n  result = result.concat(xResult);\n  var internalSlots = getInternalSlots(numberFormat);\n  var symbols = internalSlots.dataLocaleData.numbers.symbols[internalSlots.numberingSystem];\n  result.push({\n    type: 'literal',\n    value: symbols.rangeSign,\n    source: 'shared'\n  });\n  for (var _b = 0, yResult_1 = yResult; _b < yResult_1.length; _b++) {\n    var r = yResult_1[_b];\n    r.source = 'endRange';\n  }\n  result = result.concat(yResult);\n  return CollapseNumberRange(result);\n}","import { PartitionNumberRangePattern } from './PartitionNumberRangePattern';\n/**\n * https://tc39.es/ecma402/#sec-formatnumericrange\n */\nexport function FormatNumericRange(numberFormat, x, y, _a) {\n  var getInternalSlots = _a.getInternalSlots;\n  var parts = PartitionNumberRangePattern(numberFormat, x, y, {\n    getInternalSlots: getInternalSlots\n  });\n  return parts.map(function (part) {\n    return part.value;\n  }).join('');\n}","import { PartitionNumberRangePattern } from './PartitionNumberRangePattern';\n/**\n * https://tc39.es/ecma402/#sec-formatnumericrangetoparts\n */\nexport function FormatNumericRangeToParts(numberFormat, x, y, _a) {\n  var getInternalSlots = _a.getInternalSlots;\n  var parts = PartitionNumberRangePattern(numberFormat, x, y, {\n    getInternalSlots: getInternalSlots\n  });\n  return parts.map(function (part, index) {\n    return {\n      type: part.type,\n      value: part.value,\n      source: part.source,\n      result: index.toString()\n    };\n  });\n}","import { PartitionNumberPattern } from './PartitionNumberPattern';\nimport { ArrayCreate } from '../262';\nexport function FormatNumericToParts(nf, x, implDetails) {\n  var parts = PartitionNumberPattern(nf, x, implDetails);\n  var result = ArrayCreate(0);\n  for (var _i = 0, parts_1 = parts; _i < parts_1.length; _i++) {\n    var part = parts_1[_i];\n    result.push({\n      type: part.type,\n      value: part.value\n    });\n  }\n  return result;\n}","var negativeMapping = {\n  ceil: 'zero',\n  floor: 'infinity',\n  expand: 'infinity',\n  trunc: 'zero',\n  halfCeil: 'half-zero',\n  halfFloor: 'half-infinity',\n  halfExpand: 'half-infinity',\n  halfTrunc: 'half-zero',\n  halfEven: 'half-even'\n};\nvar positiveMapping = {\n  ceil: 'infinity',\n  floor: 'zero',\n  expand: 'infinity',\n  trunc: 'zero',\n  halfCeil: 'half-infinity',\n  halfFloor: 'half-zero',\n  halfExpand: 'half-infinity',\n  halfTrunc: 'half-zero',\n  halfEven: 'half-even'\n};\nexport function GetUnsignedRoundingMode(roundingMode, isNegative) {\n  if (isNegative) {\n    return negativeMapping[roundingMode];\n  }\n  return positiveMapping[roundingMode];\n}","import { GetOption } from '../GetOption';\nimport { IsWellFormedCurrencyCode } from '../IsWellFormedCurrencyCode';\nimport { IsWellFormedUnitIdentifier } from '../IsWellFormedUnitIdentifier';\n/**\n * https://tc39.es/ecma402/#sec-setnumberformatunitoptions\n */\nexport function SetNumberFormatUnitOptions(nf, options, _a) {\n  if (options === void 0) {\n    options = Object.create(null);\n  }\n  var getInternalSlots = _a.getInternalSlots;\n  var internalSlots = getInternalSlots(nf);\n  var style = GetOption(options, 'style', 'string', ['decimal', 'percent', 'currency', 'unit'], 'decimal');\n  internalSlots.style = style;\n  var currency = GetOption(options, 'currency', 'string', undefined, undefined);\n  if (currency !== undefined && !IsWellFormedCurrencyCode(currency)) {\n    throw RangeError('Malformed currency code');\n  }\n  if (style === 'currency' && currency === undefined) {\n    throw TypeError('currency cannot be undefined');\n  }\n  var currencyDisplay = GetOption(options, 'currencyDisplay', 'string', ['code', 'symbol', 'narrowSymbol', 'name'], 'symbol');\n  var currencySign = GetOption(options, 'currencySign', 'string', ['standard', 'accounting'], 'standard');\n  var unit = GetOption(options, 'unit', 'string', undefined, undefined);\n  if (unit !== undefined && !IsWellFormedUnitIdentifier(unit)) {\n    throw RangeError('Invalid unit argument for Intl.NumberFormat()');\n  }\n  if (style === 'unit' && unit === undefined) {\n    throw TypeError('unit cannot be undefined');\n  }\n  var unitDisplay = GetOption(options, 'unitDisplay', 'string', ['short', 'narrow', 'long'], 'short');\n  if (style === 'currency') {\n    internalSlots.currency = currency.toUpperCase();\n    internalSlots.currencyDisplay = currencyDisplay;\n    internalSlots.currencySign = currencySign;\n  }\n  if (style === 'unit') {\n    internalSlots.unit = unit;\n    internalSlots.unitDisplay = unitDisplay;\n  }\n}","import { GetNumberOption } from '../GetNumberOption';\nimport { DefaultNumberOption } from '../DefaultNumberOption';\nimport { GetOption } from '../GetOption';\n/**\n * https://tc39.es/ecma402/#sec-setnfdigitoptions\n */\nexport function SetNumberFormatDigitOptions(internalSlots, opts, mnfdDefault, mxfdDefault, notation) {\n  var mnid = GetNumberOption(opts, 'minimumIntegerDigits', 1, 21, 1);\n  var mnfd = opts.minimumFractionDigits;\n  var mxfd = opts.maximumFractionDigits;\n  var mnsd = opts.minimumSignificantDigits;\n  var mxsd = opts.maximumSignificantDigits;\n  internalSlots.minimumIntegerDigits = mnid;\n  var roundingPriority = GetOption(opts, 'roundingPriority', 'string', ['auto', 'morePrecision', 'lessPrecision'], 'auto');\n  var hasSd = mnsd !== undefined || mxsd !== undefined;\n  var hasFd = mnfd !== undefined || mxfd !== undefined;\n  var needSd = true;\n  var needFd = true;\n  if (roundingPriority === 'auto') {\n    needSd = hasSd;\n    if (hasSd || !hasFd && notation === 'compact') {\n      needFd = false;\n    }\n  }\n  if (needSd) {\n    if (hasSd) {\n      mnsd = DefaultNumberOption(mnsd, 1, 21, 1);\n      mxsd = DefaultNumberOption(mxsd, mnsd, 21, 21);\n      internalSlots.minimumSignificantDigits = mnsd;\n      internalSlots.maximumSignificantDigits = mxsd;\n    } else {\n      internalSlots.minimumSignificantDigits = 1;\n      internalSlots.maximumSignificantDigits = 21;\n    }\n  }\n  if (needFd) {\n    if (hasFd) {\n      // @ts-expect-error\n      mnfd = DefaultNumberOption(mnfd, 0, 20, undefined);\n      // @ts-expect-error\n      mxfd = DefaultNumberOption(mxfd, 0, 20, undefined);\n      if (mnfd === undefined) {\n        mnfd = Math.min(mnfdDefault, mxfd);\n      } else if (mxfd === undefined) {\n        mxfd = Math.max(mxfdDefault, mnfd);\n      } else if (mnfd > mxfd) {\n        throw new RangeError(\"Invalid range, \".concat(mnfd, \" > \").concat(mxfd));\n      }\n      internalSlots.minimumFractionDigits = mnfd;\n      internalSlots.maximumFractionDigits = mxfd;\n    } else {\n      internalSlots.minimumFractionDigits = mnfdDefault;\n      internalSlots.maximumFractionDigits = mxfdDefault;\n    }\n  }\n  if (needSd || needFd) {\n    if (roundingPriority === 'morePrecision') {\n      internalSlots.roundingType = 'morePrecision';\n    } else if (roundingPriority === 'lessPrecision') {\n      internalSlots.roundingType = 'lessPrecision';\n    } else if (hasSd) {\n      internalSlots.roundingType = 'significantDigits';\n    } else {\n      internalSlots.roundingType = 'fractionDigits';\n    }\n  } else {\n    internalSlots.roundingType = 'morePrecision';\n    internalSlots.minimumFractionDigits = 0;\n    internalSlots.maximumFractionDigits = 0;\n    internalSlots.minimumSignificantDigits = 1;\n    internalSlots.maximumSignificantDigits = 2;\n  }\n}","import { CanonicalizeLocaleList } from '../CanonicalizeLocaleList';\nimport { GetOption } from '../GetOption';\nimport { ResolveLocale } from '@formatjs/intl-localematcher';\nimport { SetNumberFormatUnitOptions } from './SetNumberFormatUnitOptions';\nimport { CurrencyDigits } from './CurrencyDigits';\nimport { SetNumberFormatDigitOptions } from './SetNumberFormatDigitOptions';\nimport { invariant } from '../utils';\nimport { CoerceOptionsToObject } from '../CoerceOptionsToObject';\nimport { GetNumberOption } from '../GetNumberOption';\nimport { GetStringOrBooleanOption } from '../GetStringOrBooleanOption';\nvar VALID_ROUND_INCREMENT_VALUES = [1, 2, 5, 10, 20, 25, 50, 100, 200, 250, 500, 1000, 2000];\n/**\n * https://tc39.es/ecma402/#sec-initializenumberformat\n */\nexport function InitializeNumberFormat(nf, locales, opts, _a) {\n  var getInternalSlots = _a.getInternalSlots,\n    localeData = _a.localeData,\n    availableLocales = _a.availableLocales,\n    numberingSystemNames = _a.numberingSystemNames,\n    getDefaultLocale = _a.getDefaultLocale,\n    currencyDigitsData = _a.currencyDigitsData;\n  // @ts-ignore\n  var requestedLocales = CanonicalizeLocaleList(locales);\n  var options = CoerceOptionsToObject(opts);\n  var opt = Object.create(null);\n  var matcher = GetOption(options, 'localeMatcher', 'string', ['lookup', 'best fit'], 'best fit');\n  opt.localeMatcher = matcher;\n  var numberingSystem = GetOption(options, 'numberingSystem', 'string', undefined, undefined);\n  if (numberingSystem !== undefined && numberingSystemNames.indexOf(numberingSystem) < 0) {\n    // 8.a. If numberingSystem does not match the Unicode Locale Identifier type nonterminal,\n    // throw a RangeError exception.\n    throw RangeError(\"Invalid numberingSystems: \".concat(numberingSystem));\n  }\n  opt.nu = numberingSystem;\n  var r = ResolveLocale(availableLocales, requestedLocales, opt,\n  // [[RelevantExtensionKeys]] slot, which is a constant\n  ['nu'], localeData, getDefaultLocale);\n  var dataLocaleData = localeData[r.dataLocale];\n  invariant(!!dataLocaleData, \"Missing locale data for \".concat(r.dataLocale));\n  var internalSlots = getInternalSlots(nf);\n  internalSlots.locale = r.locale;\n  internalSlots.dataLocale = r.dataLocale;\n  internalSlots.numberingSystem = r.nu;\n  internalSlots.dataLocaleData = dataLocaleData;\n  SetNumberFormatUnitOptions(nf, options, {\n    getInternalSlots: getInternalSlots\n  });\n  var style = internalSlots.style;\n  var mnfdDefault;\n  var mxfdDefault;\n  if (style === 'currency') {\n    var currency = internalSlots.currency;\n    var cDigits = CurrencyDigits(currency, {\n      currencyDigitsData: currencyDigitsData\n    });\n    mnfdDefault = cDigits;\n    mxfdDefault = cDigits;\n  } else {\n    mnfdDefault = 0;\n    mxfdDefault = style === 'percent' ? 0 : 3;\n  }\n  var notation = GetOption(options, 'notation', 'string', ['standard', 'scientific', 'engineering', 'compact'], 'standard');\n  internalSlots.notation = notation;\n  SetNumberFormatDigitOptions(internalSlots, options, mnfdDefault, mxfdDefault, notation);\n  var roundingIncrement = GetNumberOption(options, 'roundingIncrement', 1, 5000, 1);\n  if (VALID_ROUND_INCREMENT_VALUES.indexOf(roundingIncrement) === -1) {\n    throw new RangeError(\"Invalid rounding increment value: \".concat(roundingIncrement, \".\\nValid values are \").concat(VALID_ROUND_INCREMENT_VALUES, \".\"));\n  }\n  if (roundingIncrement !== 1 && internalSlots.roundingType !== 'fractionDigits') {\n    throw new TypeError(\"For roundingIncrement > 1 only fractionDigits is a valid roundingType\");\n  }\n  if (roundingIncrement !== 1 && internalSlots.maximumFractionDigits !== internalSlots.minimumFractionDigits) {\n    throw new RangeError('With roundingIncrement > 1, maximumFractionDigits and minimumFractionDigits must be equal.');\n  }\n  internalSlots.roundingIncrement = roundingIncrement;\n  var trailingZeroDisplay = GetOption(options, 'trailingZeroDisplay', 'string', ['auto', 'stripIfInteger'], 'auto');\n  internalSlots.trailingZeroDisplay = trailingZeroDisplay;\n  var compactDisplay = GetOption(options, 'compactDisplay', 'string', ['short', 'long'], 'short');\n  var defaultUseGrouping = 'auto';\n  if (notation === 'compact') {\n    internalSlots.compactDisplay = compactDisplay;\n    defaultUseGrouping = 'min2';\n  }\n  internalSlots.useGrouping = GetStringOrBooleanOption(options, 'useGrouping', ['min2', 'auto', 'always'], 'always', false, defaultUseGrouping);\n  internalSlots.signDisplay = GetOption(options, 'signDisplay', 'string', ['auto', 'never', 'always', 'exceptZero', 'negative'], 'auto');\n  internalSlots.roundingMode = GetOption(options, 'roundingMode', 'string', ['ceil', 'floor', 'expand', 'trunc', 'halfCeil', 'halfFloor', 'halfExpand', 'halfTrunc', 'halfEven'], 'halfExpand');\n  return nf;\n}","import { invariant } from './utils';\n/**\n * https://tc39.es/ecma402/#sec-partitionpattern\n * @param pattern\n */\nexport function PartitionPattern(pattern) {\n  var result = [];\n  var beginIndex = pattern.indexOf('{');\n  var endIndex = 0;\n  var nextIndex = 0;\n  var length = pattern.length;\n  while (beginIndex < pattern.length && beginIndex > -1) {\n    endIndex = pattern.indexOf('}', beginIndex);\n    invariant(endIndex > beginIndex, \"Invalid pattern \".concat(pattern));\n    if (beginIndex > nextIndex) {\n      result.push({\n        type: 'literal',\n        value: pattern.substring(nextIndex, beginIndex)\n      });\n    }\n    result.push({\n      type: pattern.substring(beginIndex + 1, endIndex),\n      value: undefined\n    });\n    nextIndex = endIndex + 1;\n    beginIndex = pattern.indexOf('{', nextIndex);\n  }\n  if (nextIndex < length) {\n    result.push({\n      type: 'literal',\n      value: pattern.substring(nextIndex, length)\n    });\n  }\n  return result;\n}","import { ToObject } from './262';\nimport { GetOption } from './GetOption';\nimport { LookupSupportedLocales } from '@formatjs/intl-localematcher';\n/**\n * https://tc39.es/ecma402/#sec-supportedlocales\n * @param availableLocales\n * @param requestedLocales\n * @param options\n */\nexport function SupportedLocales(availableLocales, requestedLocales, options) {\n  var matcher = 'best fit';\n  if (options !== undefined) {\n    options = ToObject(options);\n    matcher = GetOption(options, 'localeMatcher', 'string', ['lookup', 'best fit'], 'best fit');\n  }\n  if (matcher === 'best fit') {\n    return LookupSupportedLocales(availableLocales, requestedLocales);\n  }\n  return LookupSupportedLocales(availableLocales, requestedLocales);\n}","export var RangePatternType;\n(function (RangePatternType) {\n  RangePatternType[\"startRange\"] = \"startRange\";\n  RangePatternType[\"shared\"] = \"shared\";\n  RangePatternType[\"endRange\"] = \"endRange\";\n})(RangePatternType || (RangePatternType = {}));","import { __extends } from \"tslib\";\nvar MissingLocaleDataError = /** @class */function (_super) {\n  __extends(MissingLocaleDataError, _super);\n  function MissingLocaleDataError() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.type = 'MISSING_LOCALE_DATA';\n    return _this;\n  }\n  return MissingLocaleDataError;\n}(Error);\nexport function isMissingLocaleDataError(e) {\n  return e.type === 'MISSING_LOCALE_DATA';\n}"],"sourceRoot":""}