{"version":3,"sources":["webpack:///./app/javascript/mastodon/features/bookmarked_statuses/index.jsx"],"names":["messages","defineMessages","heading","id","defaultMessage","Bookmarks","ImmutablePureComponent","constructor","arguments","handlePin","columnId","dispatch","this","props","removeColumn","addColumn","handleMove","dir","moveColumn","handleHeaderClick","column","scrollTop","setRef","c","handleLoadMore","_debounce","expandBookmarkedStatuses","leading","UNSAFE_componentWillMount","fetchBookmarkedStatuses","render","intl","statusIds","multiColumn","hasMore","isLoading","pinned","emptyMessage","_jsx","FormattedMessage","_jsxs","Column","bindToDocument","ref","label","formatMessage","children","ColumnHeader","icon","title","onPin","onMove","onClick","StatusList","trackScroll","scrollKey","onLoadMore","Helmet","name","content","propTypes","PropTypes","func","isRequired","ImmutablePropTypes","list","object","string","bool","connect","state","getStatusList","getIn","injectIntl"],"mappings":"6QAmBA,MAAMA,EAAWC,YAAe,CAC9BC,QAAS,CAAEC,GAAG,mBAAqBC,eAAe,eASpD,MAAMC,UAAkBC,IAAuBC,cAAA,SAAAC,WAAA,KAgB7CC,UAAY,KACV,MAAM,SAAEC,EAAQ,SAAEC,GAAaC,KAAKC,MAGlCF,EADED,EACOI,YAAaJ,GAEbK,YAAU,YAAa,CAAC,GACnC,EACA,KAEFC,WAAcC,IACZ,MAAM,SAAEP,EAAQ,SAAEC,GAAaC,KAAKC,MACpCF,EAASO,YAAWR,EAAUO,GAAK,EACnC,KAEFE,kBAAoB,KAClBP,KAAKQ,OAAOC,WAAW,EACvB,KAEFC,OAASC,IACPX,KAAKQ,OAASG,CAAC,EACf,KAEFC,eAAiBC,KAAS,KACxBb,KAAKC,MAAMF,SAASe,cAA2B,GAC9C,IAAK,CAAEC,SAAS,GAAQ,CA7B3BC,4BACEhB,KAAKC,MAAMF,SAASkB,cACtB,CA6BAC,SACE,MAAM,KAAEC,EAAI,UAAEC,EAAS,SAAEtB,EAAQ,YAAEuB,EAAW,QAAEC,EAAO,UAAEC,GAAcvB,KAAKC,MACtEuB,IAAW1B,EAEX2B,EAAeC,YAACC,IAAgB,CAACpC,GAAE,mCAAoCC,eAAe,0FAE5F,OACEoC,eAACC,IAAM,CAACC,gBAAiBT,EAAaU,IAAK/B,KAAKU,OAAQsB,MAAOb,EAAKc,cAAc7C,EAASE,SAAS4C,SAAA,CAClGR,YAACS,IAAY,CACXC,KAAK,WACLC,MAAOlB,EAAKc,cAAc7C,EAASE,SACnCgD,MAAOtC,KAAKH,UACZ0C,OAAQvC,KAAKI,WACboC,QAASxC,KAAKO,kBACdiB,OAAQA,EACRH,YAAaA,IAGfK,YAACe,IAAU,CACTC,aAAclB,EACdJ,UAAWA,EACXuB,UAAY,uBAAsB7C,IAClCwB,QAASA,EACTC,UAAWA,EACXqB,WAAY5C,KAAKY,eACjBa,aAAcA,EACdK,gBAAiBT,IAGnBK,YAACmB,IAAM,UACLnB,YAAA,kBAAQP,EAAKc,cAAc7C,EAASE,UACpCoC,YAAA,QAAMoB,KAAK,SAASC,QAAQ,eAIpC,EA9EItD,EAEGuD,UAAY,CACjBjD,SAAUkD,IAAUC,KAAKC,WACzB/B,UAAWgC,IAAmBC,KAAKF,WACnChC,KAAM8B,IAAUK,OAAOH,WACvBrD,SAAUmD,IAAUM,OACpBlC,YAAa4B,IAAUO,KACvBlC,QAAS2B,IAAUO,KACnBjC,UAAW0B,IAAUO,MAyEVC,6BAxFSC,IAAK,CAC3BtC,UAAWuC,YAAcD,EAAO,aAChCnC,UAAWmC,EAAME,MAAM,CAAC,eAAgB,YAAa,cAAc,GACnEtC,UAAWoC,EAAME,MAAM,CAAC,eAAgB,YAAa,YAqFxCH,CAAyBI,YAAWpE,G","file":"js/features/bookmarked_statuses-5bd6d12bbc1ab9e44b9b.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\n\nimport { defineMessages, injectIntl, FormattedMessage } from 'react-intl';\n\nimport { Helmet } from 'react-helmet';\n\nimport ImmutablePropTypes from 'react-immutable-proptypes';\nimport ImmutablePureComponent from 'react-immutable-pure-component';\nimport { connect } from 'react-redux';\n\nimport { debounce } from 'lodash';\n\nimport { fetchBookmarkedStatuses, expandBookmarkedStatuses } from 'mastodon/actions/bookmarks';\nimport { addColumn, removeColumn, moveColumn } from 'mastodon/actions/columns';\nimport ColumnHeader from 'mastodon/components/column_header';\nimport StatusList from 'mastodon/components/status_list';\nimport Column from 'mastodon/features/ui/components/column';\nimport { getStatusList } from 'mastodon/selectors';\n\nconst messages = defineMessages({\n  heading: { id: 'column.bookmarks', defaultMessage: 'Bookmarks' },\n});\n\nconst mapStateToProps = state => ({\n  statusIds: getStatusList(state, 'bookmarks'),\n  isLoading: state.getIn(['status_lists', 'bookmarks', 'isLoading'], true),\n  hasMore: !!state.getIn(['status_lists', 'bookmarks', 'next']),\n});\n\nclass Bookmarks extends ImmutablePureComponent {\n\n  static propTypes = {\n    dispatch: PropTypes.func.isRequired,\n    statusIds: ImmutablePropTypes.list.isRequired,\n    intl: PropTypes.object.isRequired,\n    columnId: PropTypes.string,\n    multiColumn: PropTypes.bool,\n    hasMore: PropTypes.bool,\n    isLoading: PropTypes.bool,\n  };\n\n  UNSAFE_componentWillMount () {\n    this.props.dispatch(fetchBookmarkedStatuses());\n  }\n\n  handlePin = () => {\n    const { columnId, dispatch } = this.props;\n\n    if (columnId) {\n      dispatch(removeColumn(columnId));\n    } else {\n      dispatch(addColumn('BOOKMARKS', {}));\n    }\n  };\n\n  handleMove = (dir) => {\n    const { columnId, dispatch } = this.props;\n    dispatch(moveColumn(columnId, dir));\n  };\n\n  handleHeaderClick = () => {\n    this.column.scrollTop();\n  };\n\n  setRef = c => {\n    this.column = c;\n  };\n\n  handleLoadMore = debounce(() => {\n    this.props.dispatch(expandBookmarkedStatuses());\n  }, 300, { leading: true });\n\n  render () {\n    const { intl, statusIds, columnId, multiColumn, hasMore, isLoading } = this.props;\n    const pinned = !!columnId;\n\n    const emptyMessage = <FormattedMessage id='empty_column.bookmarked_statuses' defaultMessage=\"You don't have any bookmarked posts yet. When you bookmark one, it will show up here.\" />;\n\n    return (\n      <Column bindToDocument={!multiColumn} ref={this.setRef} label={intl.formatMessage(messages.heading)}>\n        <ColumnHeader\n          icon='bookmark'\n          title={intl.formatMessage(messages.heading)}\n          onPin={this.handlePin}\n          onMove={this.handleMove}\n          onClick={this.handleHeaderClick}\n          pinned={pinned}\n          multiColumn={multiColumn}\n        />\n\n        <StatusList\n          trackScroll={!pinned}\n          statusIds={statusIds}\n          scrollKey={`bookmarked_statuses-${columnId}`}\n          hasMore={hasMore}\n          isLoading={isLoading}\n          onLoadMore={this.handleLoadMore}\n          emptyMessage={emptyMessage}\n          bindToDocument={!multiColumn}\n        />\n\n        <Helmet>\n          <title>{intl.formatMessage(messages.heading)}</title>\n          <meta name='robots' content='noindex' />\n        </Helmet>\n      </Column>\n    );\n  }\n\n}\n\nexport default connect(mapStateToProps)(injectIntl(Bookmarks));\n"],"sourceRoot":""}